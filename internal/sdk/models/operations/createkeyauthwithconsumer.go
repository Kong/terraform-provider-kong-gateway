// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-kong-gateway/internal/sdk/internal/utils"
	"github.com/kong/terraform-provider-kong-gateway/internal/sdk/models/shared"
	"net/http"
)

type CreateKeyAuthWithConsumerRequest struct {
	// Consumer ID for nested entities
	ConsumerID string `pathParam:"style=simple,explode=false,name=ConsumerIdForNestedEntities"`
	// The name or UUID of the workspace
	Workspace string `default:"default" pathParam:"style=simple,explode=false,name=workspace"`
	// Description of new API-key for creation
	KeyAuthWithoutParents *shared.KeyAuthWithoutParents `request:"mediaType=application/json"`
}

func (c CreateKeyAuthWithConsumerRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateKeyAuthWithConsumerRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"ConsumerIdForNestedEntities", "workspace"}); err != nil {
		return err
	}
	return nil
}

func (c *CreateKeyAuthWithConsumerRequest) GetConsumerID() string {
	if c == nil {
		return ""
	}
	return c.ConsumerID
}

func (c *CreateKeyAuthWithConsumerRequest) GetWorkspace() string {
	if c == nil {
		return ""
	}
	return c.Workspace
}

func (c *CreateKeyAuthWithConsumerRequest) GetKeyAuthWithoutParents() *shared.KeyAuthWithoutParents {
	if c == nil {
		return nil
	}
	return c.KeyAuthWithoutParents
}

type CreateKeyAuthWithConsumerResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successfully created API-key
	KeyAuth *shared.KeyAuth
}

func (c *CreateKeyAuthWithConsumerResponse) GetContentType() string {
	if c == nil {
		return ""
	}
	return c.ContentType
}

func (c *CreateKeyAuthWithConsumerResponse) GetStatusCode() int {
	if c == nil {
		return 0
	}
	return c.StatusCode
}

func (c *CreateKeyAuthWithConsumerResponse) GetRawResponse() *http.Response {
	if c == nil {
		return nil
	}
	return c.RawResponse
}

func (c *CreateKeyAuthWithConsumerResponse) GetKeyAuth() *shared.KeyAuth {
	if c == nil {
		return nil
	}
	return c.KeyAuth
}
