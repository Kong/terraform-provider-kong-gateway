// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-kong-gateway/internal/sdk/internal/utils"
	"github.com/kong/terraform-provider-kong-gateway/internal/sdk/models/shared"
	"net/http"
)

type CreateKeySetRequest struct {
	// The name or UUID of the workspace
	Workspace string `default:"default" pathParam:"style=simple,explode=false,name=workspace"`
	// Description of the new KeySet for creation
	KeySet *shared.KeySet `request:"mediaType=application/json"`
}

func (c CreateKeySetRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateKeySetRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"workspace"}); err != nil {
		return err
	}
	return nil
}

func (c *CreateKeySetRequest) GetWorkspace() string {
	if c == nil {
		return ""
	}
	return c.Workspace
}

func (c *CreateKeySetRequest) GetKeySet() *shared.KeySet {
	if c == nil {
		return nil
	}
	return c.KeySet
}

type CreateKeySetResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successfully created KeySet
	KeySet *shared.KeySet
	// Unauthorized
	GatewayUnauthorizedError *shared.GatewayUnauthorizedError
}

func (c *CreateKeySetResponse) GetContentType() string {
	if c == nil {
		return ""
	}
	return c.ContentType
}

func (c *CreateKeySetResponse) GetStatusCode() int {
	if c == nil {
		return 0
	}
	return c.StatusCode
}

func (c *CreateKeySetResponse) GetRawResponse() *http.Response {
	if c == nil {
		return nil
	}
	return c.RawResponse
}

func (c *CreateKeySetResponse) GetKeySet() *shared.KeySet {
	if c == nil {
		return nil
	}
	return c.KeySet
}

func (c *CreateKeySetResponse) GetGatewayUnauthorizedError() *shared.GatewayUnauthorizedError {
	if c == nil {
		return nil
	}
	return c.GatewayUnauthorizedError
}
