// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type Config struct {
	Meta                          map[string]string `json:"meta,omitempty"`
	Portal                        *bool             `json:"portal,omitempty"`
	PortalAccessRequestEmail      *bool             `json:"portal_access_request_email,omitempty"`
	PortalApplicationRequestEmail *bool             `json:"portal_application_request_email,omitempty"`
	PortalApplicationStatusEmail  *bool             `json:"portal_application_status_email,omitempty"`
	PortalApprovedEmail           *bool             `json:"portal_approved_email,omitempty"`
	PortalAuth                    *string           `json:"portal_auth,omitempty"`
	PortalAuthConf                *string           `json:"portal_auth_conf,omitempty"`
	PortalAutoApprove             *bool             `json:"portal_auto_approve,omitempty"`
	PortalCorsOrigins             []string          `json:"portal_cors_origins,omitempty"`
	PortalDeveloperMetaFields     *string           `json:"portal_developer_meta_fields,omitempty"`
	PortalEmailsFrom              *string           `json:"portal_emails_from,omitempty"`
	PortalEmailsReplyTo           *string           `json:"portal_emails_reply_to,omitempty"`
	PortalInviteEmail             *bool             `json:"portal_invite_email,omitempty"`
	PortalIsLegacy                *bool             `json:"portal_is_legacy,omitempty"`
	PortalResetEmail              *bool             `json:"portal_reset_email,omitempty"`
	PortalResetSuccessEmail       *bool             `json:"portal_reset_success_email,omitempty"`
	PortalSessionConf             *string           `json:"portal_session_conf,omitempty"`
	PortalSMTPAdminEmails         []string          `json:"portal_smtp_admin_emails,omitempty"`
	PortalTokenExp                *int64            `json:"portal_token_exp,omitempty"`
}

func (c *Config) GetMeta() map[string]string {
	if c == nil {
		return nil
	}
	return c.Meta
}

func (c *Config) GetPortal() *bool {
	if c == nil {
		return nil
	}
	return c.Portal
}

func (c *Config) GetPortalAccessRequestEmail() *bool {
	if c == nil {
		return nil
	}
	return c.PortalAccessRequestEmail
}

func (c *Config) GetPortalApplicationRequestEmail() *bool {
	if c == nil {
		return nil
	}
	return c.PortalApplicationRequestEmail
}

func (c *Config) GetPortalApplicationStatusEmail() *bool {
	if c == nil {
		return nil
	}
	return c.PortalApplicationStatusEmail
}

func (c *Config) GetPortalApprovedEmail() *bool {
	if c == nil {
		return nil
	}
	return c.PortalApprovedEmail
}

func (c *Config) GetPortalAuth() *string {
	if c == nil {
		return nil
	}
	return c.PortalAuth
}

func (c *Config) GetPortalAuthConf() *string {
	if c == nil {
		return nil
	}
	return c.PortalAuthConf
}

func (c *Config) GetPortalAutoApprove() *bool {
	if c == nil {
		return nil
	}
	return c.PortalAutoApprove
}

func (c *Config) GetPortalCorsOrigins() []string {
	if c == nil {
		return nil
	}
	return c.PortalCorsOrigins
}

func (c *Config) GetPortalDeveloperMetaFields() *string {
	if c == nil {
		return nil
	}
	return c.PortalDeveloperMetaFields
}

func (c *Config) GetPortalEmailsFrom() *string {
	if c == nil {
		return nil
	}
	return c.PortalEmailsFrom
}

func (c *Config) GetPortalEmailsReplyTo() *string {
	if c == nil {
		return nil
	}
	return c.PortalEmailsReplyTo
}

func (c *Config) GetPortalInviteEmail() *bool {
	if c == nil {
		return nil
	}
	return c.PortalInviteEmail
}

func (c *Config) GetPortalIsLegacy() *bool {
	if c == nil {
		return nil
	}
	return c.PortalIsLegacy
}

func (c *Config) GetPortalResetEmail() *bool {
	if c == nil {
		return nil
	}
	return c.PortalResetEmail
}

func (c *Config) GetPortalResetSuccessEmail() *bool {
	if c == nil {
		return nil
	}
	return c.PortalResetSuccessEmail
}

func (c *Config) GetPortalSessionConf() *string {
	if c == nil {
		return nil
	}
	return c.PortalSessionConf
}

func (c *Config) GetPortalSMTPAdminEmails() []string {
	if c == nil {
		return nil
	}
	return c.PortalSMTPAdminEmails
}

func (c *Config) GetPortalTokenExp() *int64 {
	if c == nil {
		return nil
	}
	return c.PortalTokenExp
}

type Meta struct {
	Color     *string `json:"color,omitempty"`
	Thumbnail *string `json:"thumbnail,omitempty"`
}

func (m *Meta) GetColor() *string {
	if m == nil {
		return nil
	}
	return m.Color
}

func (m *Meta) GetThumbnail() *string {
	if m == nil {
		return nil
	}
	return m.Thumbnail
}

type Workspace struct {
	// A description or additional information about the workspace.
	Comment *string `json:"comment,omitempty"`
	Config  *Config `json:"config,omitempty"`
	// Unix epoch when the resource was created.
	CreatedAt *int64 `json:"created_at,omitempty"`
	// A string representing a UUID (universally unique identifier).
	ID   *string `json:"id,omitempty"`
	Meta *Meta   `json:"meta,omitempty"`
	// A unique string representing a UTF-8 encoded name.
	Name string `json:"name"`
	// Unix epoch when the resource was last updated.
	UpdatedAt *int64 `json:"updated_at,omitempty"`
}

func (w *Workspace) GetComment() *string {
	if w == nil {
		return nil
	}
	return w.Comment
}

func (w *Workspace) GetConfig() *Config {
	if w == nil {
		return nil
	}
	return w.Config
}

func (w *Workspace) GetCreatedAt() *int64 {
	if w == nil {
		return nil
	}
	return w.CreatedAt
}

func (w *Workspace) GetID() *string {
	if w == nil {
		return nil
	}
	return w.ID
}

func (w *Workspace) GetMeta() *Meta {
	if w == nil {
		return nil
	}
	return w.Meta
}

func (w *Workspace) GetName() string {
	if w == nil {
		return ""
	}
	return w.Name
}

func (w *Workspace) GetUpdatedAt() *int64 {
	if w == nil {
		return nil
	}
	return w.UpdatedAt
}
