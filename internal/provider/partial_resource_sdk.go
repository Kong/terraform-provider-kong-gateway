// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"encoding/json"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/kong/terraform-provider-kong-gateway/internal/sdk/models/shared"
)

func (r *PartialResourceModel) ToSharedPartial() *shared.Partial {
	config := make(map[string]interface{})
	for configKey, configValue := range r.Config {
		var configInst interface{}
		_ = json.Unmarshal([]byte(configValue.ValueString()), &configInst)
		config[configKey] = configInst
	}
	createdAt := new(int64)
	if !r.CreatedAt.IsUnknown() && !r.CreatedAt.IsNull() {
		*createdAt = r.CreatedAt.ValueInt64()
	} else {
		createdAt = nil
	}
	id := new(string)
	if !r.ID.IsUnknown() && !r.ID.IsNull() {
		*id = r.ID.ValueString()
	} else {
		id = nil
	}
	name := new(string)
	if !r.Name.IsUnknown() && !r.Name.IsNull() {
		*name = r.Name.ValueString()
	} else {
		name = nil
	}
	var tags []string = []string{}
	for _, tagsItem := range r.Tags {
		tags = append(tags, tagsItem.ValueString())
	}
	var typeVar string
	typeVar = r.Type.ValueString()

	updatedAt := new(int64)
	if !r.UpdatedAt.IsUnknown() && !r.UpdatedAt.IsNull() {
		*updatedAt = r.UpdatedAt.ValueInt64()
	} else {
		updatedAt = nil
	}
	out := shared.Partial{
		Config:    config,
		CreatedAt: createdAt,
		ID:        id,
		Name:      name,
		Tags:      tags,
		Type:      typeVar,
		UpdatedAt: updatedAt,
	}
	return &out
}

func (r *PartialResourceModel) RefreshFromSharedPartial(resp *shared.Partial) {
	if resp != nil {
		if len(resp.Config) > 0 {
			r.Config = make(map[string]types.String, len(resp.Config))
			for key, value := range resp.Config {
				result, _ := json.Marshal(value)
				r.Config[key] = types.StringValue(string(result))
			}
		}
		r.CreatedAt = types.Int64PointerValue(resp.CreatedAt)
		r.ID = types.StringPointerValue(resp.ID)
		r.Name = types.StringPointerValue(resp.Name)
		r.Tags = make([]types.String, 0, len(resp.Tags))
		for _, v := range resp.Tags {
			r.Tags = append(r.Tags, types.StringValue(v))
		}
		r.Type = types.StringValue(resp.Type)
		r.UpdatedAt = types.Int64PointerValue(resp.UpdatedAt)
	}
}
