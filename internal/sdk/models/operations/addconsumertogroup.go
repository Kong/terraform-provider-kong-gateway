// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-kong-gateway/internal/sdk/internal/utils"
	"github.com/kong/terraform-provider-kong-gateway/internal/sdk/models/shared"
	"net/http"
)

type AddConsumerToGroupRequestBody struct {
	ConsumerID *string `json:"consumer,omitempty"`
}

func (a *AddConsumerToGroupRequestBody) GetConsumerID() *string {
	if a == nil {
		return nil
	}
	return a.ConsumerID
}

type AddConsumerToGroupRequest struct {
	// The UUID or name of the consumer group
	ConsumerGroupID string `pathParam:"style=simple,explode=false,name=ConsumerGroupId"`
	// The name or UUID of the workspace
	Workspace   string                         `default:"default" pathParam:"style=simple,explode=false,name=workspace"`
	RequestBody *AddConsumerToGroupRequestBody `request:"mediaType=application/json"`
}

func (a AddConsumerToGroupRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AddConsumerToGroupRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"ConsumerGroupId", "workspace"}); err != nil {
		return err
	}
	return nil
}

func (a *AddConsumerToGroupRequest) GetConsumerGroupID() string {
	if a == nil {
		return ""
	}
	return a.ConsumerGroupID
}

func (a *AddConsumerToGroupRequest) GetWorkspace() string {
	if a == nil {
		return ""
	}
	return a.Workspace
}

func (a *AddConsumerToGroupRequest) GetRequestBody() *AddConsumerToGroupRequestBody {
	if a == nil {
		return nil
	}
	return a.RequestBody
}

// AddConsumerToGroupResponseBody - Consumer added to group
type AddConsumerToGroupResponseBody struct {
	ConsumerGroup *shared.ConsumerGroup `json:"consumer_group,omitempty"`
	Consumers     []shared.Consumer     `json:"consumers,omitempty"`
}

func (a *AddConsumerToGroupResponseBody) GetConsumerGroup() *shared.ConsumerGroup {
	if a == nil {
		return nil
	}
	return a.ConsumerGroup
}

func (a *AddConsumerToGroupResponseBody) GetConsumers() []shared.Consumer {
	if a == nil {
		return nil
	}
	return a.Consumers
}

type AddConsumerToGroupResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Consumer added to group
	Object *AddConsumerToGroupResponseBody
}

func (a *AddConsumerToGroupResponse) GetContentType() string {
	if a == nil {
		return ""
	}
	return a.ContentType
}

func (a *AddConsumerToGroupResponse) GetStatusCode() int {
	if a == nil {
		return 0
	}
	return a.StatusCode
}

func (a *AddConsumerToGroupResponse) GetRawResponse() *http.Response {
	if a == nil {
		return nil
	}
	return a.RawResponse
}

func (a *AddConsumerToGroupResponse) GetObject() *AddConsumerToGroupResponseBody {
	if a == nil {
		return nil
	}
	return a.Object
}
