// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-kong-gateway/internal/sdk/internal/utils"
	"github.com/kong/terraform-provider-kong-gateway/internal/sdk/models/shared"
	"net/http"
)

type GetHttplogPluginRequest struct {
	// ID of the Plugin to lookup
	PluginID string `pathParam:"style=simple,explode=false,name=PluginId"`
	// The name or UUID of the workspace
	Workspace string `default:"default" pathParam:"style=simple,explode=false,name=workspace"`
}

func (g GetHttplogPluginRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetHttplogPluginRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"PluginId", "workspace"}); err != nil {
		return err
	}
	return nil
}

func (g *GetHttplogPluginRequest) GetPluginID() string {
	if g == nil {
		return ""
	}
	return g.PluginID
}

func (g *GetHttplogPluginRequest) GetWorkspace() string {
	if g == nil {
		return ""
	}
	return g.Workspace
}

type GetHttplogPluginResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// HttpLog plugin
	HTTPLogPlugin *shared.HTTPLogPlugin
	// Unauthorized
	GatewayUnauthorizedError *shared.GatewayUnauthorizedError
}

func (g *GetHttplogPluginResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetHttplogPluginResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetHttplogPluginResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetHttplogPluginResponse) GetHTTPLogPlugin() *shared.HTTPLogPlugin {
	if g == nil {
		return nil
	}
	return g.HTTPLogPlugin
}

func (g *GetHttplogPluginResponse) GetGatewayUnauthorizedError() *shared.GatewayUnauthorizedError {
	if g == nil {
		return nil
	}
	return g.GatewayUnauthorizedError
}
