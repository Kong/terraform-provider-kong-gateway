// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-kong-gateway/internal/sdk/internal/utils"
	"github.com/kong/terraform-provider-kong-gateway/internal/sdk/models/shared"
	"net/http"
)

type CreateACLPluginRequest struct {
	// The name or UUID of the workspace
	Workspace string           `default:"default" pathParam:"style=simple,explode=false,name=workspace"`
	ACLPlugin shared.ACLPlugin `request:"mediaType=application/json"`
}

func (c CreateACLPluginRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateACLPluginRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"workspace", "ACLPlugin"}); err != nil {
		return err
	}
	return nil
}

func (c *CreateACLPluginRequest) GetWorkspace() string {
	if c == nil {
		return ""
	}
	return c.Workspace
}

func (c *CreateACLPluginRequest) GetACLPlugin() shared.ACLPlugin {
	if c == nil {
		return shared.ACLPlugin{}
	}
	return c.ACLPlugin
}

type CreateACLPluginResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Created ACL plugin
	ACLPlugin *shared.ACLPlugin
	// Unauthorized
	GatewayUnauthorizedError *shared.GatewayUnauthorizedError
}

func (c *CreateACLPluginResponse) GetContentType() string {
	if c == nil {
		return ""
	}
	return c.ContentType
}

func (c *CreateACLPluginResponse) GetStatusCode() int {
	if c == nil {
		return 0
	}
	return c.StatusCode
}

func (c *CreateACLPluginResponse) GetRawResponse() *http.Response {
	if c == nil {
		return nil
	}
	return c.RawResponse
}

func (c *CreateACLPluginResponse) GetACLPlugin() *shared.ACLPlugin {
	if c == nil {
		return nil
	}
	return c.ACLPlugin
}

func (c *CreateACLPluginResponse) GetGatewayUnauthorizedError() *shared.GatewayUnauthorizedError {
	if c == nil {
		return nil
	}
	return c.GatewayUnauthorizedError
}
