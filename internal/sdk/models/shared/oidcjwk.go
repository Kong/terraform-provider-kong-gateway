// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type Keys struct {
	Alg           *string  `json:"alg,omitempty"`
	Crv           *string  `json:"crv,omitempty"`
	D             *string  `json:"d,omitempty"`
	Dp            *string  `json:"dp,omitempty"`
	Dq            *string  `json:"dq,omitempty"`
	E             *string  `json:"e,omitempty"`
	Issuer        *string  `json:"issuer,omitempty"`
	K             *string  `json:"k,omitempty"`
	KeyOps        []string `json:"key_ops,omitempty"`
	Kid           *string  `json:"kid,omitempty"`
	Kty           *string  `json:"kty,omitempty"`
	N             *string  `json:"n,omitempty"`
	Oth           *string  `json:"oth,omitempty"`
	P             *string  `json:"p,omitempty"`
	Q             *string  `json:"q,omitempty"`
	Qi            *string  `json:"qi,omitempty"`
	R             *string  `json:"r,omitempty"`
	T             *string  `json:"t,omitempty"`
	Use           *string  `json:"use,omitempty"`
	X             *string  `json:"x,omitempty"`
	X5c           []string `json:"x5c,omitempty"`
	X5t           *string  `json:"x5t,omitempty"`
	X5tNumberS256 *string  `json:"x5t#S256,omitempty"`
	X5u           *string  `json:"x5u,omitempty"`
	Y             *string  `json:"y,omitempty"`
}

func (o *Keys) GetAlg() *string {
	if o == nil {
		return nil
	}
	return o.Alg
}

func (o *Keys) GetCrv() *string {
	if o == nil {
		return nil
	}
	return o.Crv
}

func (o *Keys) GetD() *string {
	if o == nil {
		return nil
	}
	return o.D
}

func (o *Keys) GetDp() *string {
	if o == nil {
		return nil
	}
	return o.Dp
}

func (o *Keys) GetDq() *string {
	if o == nil {
		return nil
	}
	return o.Dq
}

func (o *Keys) GetE() *string {
	if o == nil {
		return nil
	}
	return o.E
}

func (o *Keys) GetIssuer() *string {
	if o == nil {
		return nil
	}
	return o.Issuer
}

func (o *Keys) GetK() *string {
	if o == nil {
		return nil
	}
	return o.K
}

func (o *Keys) GetKeyOps() []string {
	if o == nil {
		return nil
	}
	return o.KeyOps
}

func (o *Keys) GetKid() *string {
	if o == nil {
		return nil
	}
	return o.Kid
}

func (o *Keys) GetKty() *string {
	if o == nil {
		return nil
	}
	return o.Kty
}

func (o *Keys) GetN() *string {
	if o == nil {
		return nil
	}
	return o.N
}

func (o *Keys) GetOth() *string {
	if o == nil {
		return nil
	}
	return o.Oth
}

func (o *Keys) GetP() *string {
	if o == nil {
		return nil
	}
	return o.P
}

func (o *Keys) GetQ() *string {
	if o == nil {
		return nil
	}
	return o.Q
}

func (o *Keys) GetQi() *string {
	if o == nil {
		return nil
	}
	return o.Qi
}

func (o *Keys) GetR() *string {
	if o == nil {
		return nil
	}
	return o.R
}

func (o *Keys) GetT() *string {
	if o == nil {
		return nil
	}
	return o.T
}

func (o *Keys) GetUse() *string {
	if o == nil {
		return nil
	}
	return o.Use
}

func (o *Keys) GetX() *string {
	if o == nil {
		return nil
	}
	return o.X
}

func (o *Keys) GetX5c() []string {
	if o == nil {
		return nil
	}
	return o.X5c
}

func (o *Keys) GetX5t() *string {
	if o == nil {
		return nil
	}
	return o.X5t
}

func (o *Keys) GetX5tNumberS256() *string {
	if o == nil {
		return nil
	}
	return o.X5tNumberS256
}

func (o *Keys) GetX5u() *string {
	if o == nil {
		return nil
	}
	return o.X5u
}

func (o *Keys) GetY() *string {
	if o == nil {
		return nil
	}
	return o.Y
}

type Jwks struct {
	Keys []Keys `json:"keys,omitempty"`
}

func (o *Jwks) GetKeys() []Keys {
	if o == nil {
		return nil
	}
	return o.Keys
}

type OidcJwk struct {
	ID   *string `json:"id,omitempty"`
	Jwks *Jwks   `json:"jwks,omitempty"`
}

func (o *OidcJwk) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *OidcJwk) GetJwks() *Jwks {
	if o == nil {
		return nil
	}
	return o.Jwks
}
