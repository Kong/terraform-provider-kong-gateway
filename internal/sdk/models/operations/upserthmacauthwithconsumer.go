// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-kong-gateway/internal/sdk/internal/utils"
	"github.com/kong/terraform-provider-kong-gateway/internal/sdk/models/shared"
	"net/http"
)

type UpsertHmacAuthWithConsumerRequest struct {
	// Consumer ID for nested entities
	ConsumerID string `pathParam:"style=simple,explode=false,name=ConsumerIdForNestedEntities"`
	// ID of the HMAC-auth credential to lookup
	HMACAuthID string `pathParam:"style=simple,explode=false,name=HMACAuthId"`
	// The name or UUID of the workspace
	Workspace string `default:"default" pathParam:"style=simple,explode=false,name=workspace"`
	// Description of the HMAC-auth credential
	HMACAuthWithoutParents shared.HMACAuthWithoutParents `request:"mediaType=application/json"`
}

func (u UpsertHmacAuthWithConsumerRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpsertHmacAuthWithConsumerRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, []string{"ConsumerIdForNestedEntities", "HMACAuthId", "workspace", "HMACAuthWithoutParents"}); err != nil {
		return err
	}
	return nil
}

func (u *UpsertHmacAuthWithConsumerRequest) GetConsumerID() string {
	if u == nil {
		return ""
	}
	return u.ConsumerID
}

func (u *UpsertHmacAuthWithConsumerRequest) GetHMACAuthID() string {
	if u == nil {
		return ""
	}
	return u.HMACAuthID
}

func (u *UpsertHmacAuthWithConsumerRequest) GetWorkspace() string {
	if u == nil {
		return ""
	}
	return u.Workspace
}

func (u *UpsertHmacAuthWithConsumerRequest) GetHMACAuthWithoutParents() shared.HMACAuthWithoutParents {
	if u == nil {
		return shared.HMACAuthWithoutParents{}
	}
	return u.HMACAuthWithoutParents
}

type UpsertHmacAuthWithConsumerResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successfully upserted HMAC-auth credential
	HMACAuth *shared.HMACAuth
}

func (u *UpsertHmacAuthWithConsumerResponse) GetContentType() string {
	if u == nil {
		return ""
	}
	return u.ContentType
}

func (u *UpsertHmacAuthWithConsumerResponse) GetStatusCode() int {
	if u == nil {
		return 0
	}
	return u.StatusCode
}

func (u *UpsertHmacAuthWithConsumerResponse) GetRawResponse() *http.Response {
	if u == nil {
		return nil
	}
	return u.RawResponse
}

func (u *UpsertHmacAuthWithConsumerResponse) GetHMACAuth() *shared.HMACAuth {
	if u == nil {
		return nil
	}
	return u.HMACAuth
}
