lockVersion: 2.0.0
id: 8a4eac39-6713-4ddc-9ce6-7a233c1cb864
management:
  docChecksum: 0514da96437e525b06016e7fef97d853
  docVersion: 0.0.1
  speakeasyVersion: 1.447.0
  generationVersion: 2.463.0
  releaseVersion: 0.3.0
  configChecksum: 115bc365467863dcc2a3ab62cf799b37
features:
  terraform:
    additionalDependencies: 0.1.0
    constsAndDefaults: 0.2.0
    core: 3.26.4
    envVarSecurityUsage: 0.1.0
    globalSecurity: 2.81.9
    globalServerURLs: 2.82.1
    inputOutputModels: 2.83.0
    nameOverrides: 2.81.2
    nullables: 0.0.0
    typeOverrides: 2.81.1
generatedFiles:
  - .gitattributes
  - CONTRIBUTING.md
  - USAGE.md
  - examples/README.md
  - examples/data-sources/kong-gateway_acl/data-source.tf
  - examples/data-sources/kong-gateway_basic_auth/data-source.tf
  - examples/data-sources/kong-gateway_ca_certificate/data-source.tf
  - examples/data-sources/kong-gateway_certificate/data-source.tf
  - examples/data-sources/kong-gateway_consumer/data-source.tf
  - examples/data-sources/kong-gateway_consumer_group/data-source.tf
  - examples/data-sources/kong-gateway_hmac_auth/data-source.tf
  - examples/data-sources/kong-gateway_jwt/data-source.tf
  - examples/data-sources/kong-gateway_key/data-source.tf
  - examples/data-sources/kong-gateway_key_auth/data-source.tf
  - examples/data-sources/kong-gateway_key_set/data-source.tf
  - examples/data-sources/kong-gateway_mtls_auth/data-source.tf
  - examples/data-sources/kong-gateway_plugin_acl/data-source.tf
  - examples/data-sources/kong-gateway_plugin_acme/data-source.tf
  - examples/data-sources/kong-gateway_plugin_ai_prompt_decorator/data-source.tf
  - examples/data-sources/kong-gateway_plugin_ai_prompt_guard/data-source.tf
  - examples/data-sources/kong-gateway_plugin_ai_prompt_template/data-source.tf
  - examples/data-sources/kong-gateway_plugin_ai_proxy/data-source.tf
  - examples/data-sources/kong-gateway_plugin_ai_request_transformer/data-source.tf
  - examples/data-sources/kong-gateway_plugin_ai_response_transformer/data-source.tf
  - examples/data-sources/kong-gateway_plugin_aws_lambda/data-source.tf
  - examples/data-sources/kong-gateway_plugin_azure_functions/data-source.tf
  - examples/data-sources/kong-gateway_plugin_basic_auth/data-source.tf
  - examples/data-sources/kong-gateway_plugin_bot_detection/data-source.tf
  - examples/data-sources/kong-gateway_plugin_canary/data-source.tf
  - examples/data-sources/kong-gateway_plugin_correlation_id/data-source.tf
  - examples/data-sources/kong-gateway_plugin_cors/data-source.tf
  - examples/data-sources/kong-gateway_plugin_datadog/data-source.tf
  - examples/data-sources/kong-gateway_plugin_degraphql/data-source.tf
  - examples/data-sources/kong-gateway_plugin_exit_transformer/data-source.tf
  - examples/data-sources/kong-gateway_plugin_file_log/data-source.tf
  - examples/data-sources/kong-gateway_plugin_forward_proxy/data-source.tf
  - examples/data-sources/kong-gateway_plugin_graphql_proxy_cache_advanced/data-source.tf
  - examples/data-sources/kong-gateway_plugin_graphql_rate_limiting_advanced/data-source.tf
  - examples/data-sources/kong-gateway_plugin_grpc_gateway/data-source.tf
  - examples/data-sources/kong-gateway_plugin_grpc_web/data-source.tf
  - examples/data-sources/kong-gateway_plugin_hmac_auth/data-source.tf
  - examples/data-sources/kong-gateway_plugin_http_log/data-source.tf
  - examples/data-sources/kong-gateway_plugin_ip_restriction/data-source.tf
  - examples/data-sources/kong-gateway_plugin_jq/data-source.tf
  - examples/data-sources/kong-gateway_plugin_jwe_decrypt/data-source.tf
  - examples/data-sources/kong-gateway_plugin_jwt/data-source.tf
  - examples/data-sources/kong-gateway_plugin_jwt_signer/data-source.tf
  - examples/data-sources/kong-gateway_plugin_kafka_log/data-source.tf
  - examples/data-sources/kong-gateway_plugin_kafka_upstream/data-source.tf
  - examples/data-sources/kong-gateway_plugin_key_auth/data-source.tf
  - examples/data-sources/kong-gateway_plugin_key_auth_enc/data-source.tf
  - examples/data-sources/kong-gateway_plugin_konnect_application_auth/data-source.tf
  - examples/data-sources/kong-gateway_plugin_ldap_auth/data-source.tf
  - examples/data-sources/kong-gateway_plugin_ldap_auth_advanced/data-source.tf
  - examples/data-sources/kong-gateway_plugin_loggly/data-source.tf
  - examples/data-sources/kong-gateway_plugin_mocking/data-source.tf
  - examples/data-sources/kong-gateway_plugin_mtls_auth/data-source.tf
  - examples/data-sources/kong-gateway_plugin_oas_validation/data-source.tf
  - examples/data-sources/kong-gateway_plugin_oauth2/data-source.tf
  - examples/data-sources/kong-gateway_plugin_oauth2_introspection/data-source.tf
  - examples/data-sources/kong-gateway_plugin_opa/data-source.tf
  - examples/data-sources/kong-gateway_plugin_openid_connect/data-source.tf
  - examples/data-sources/kong-gateway_plugin_opentelemetry/data-source.tf
  - examples/data-sources/kong-gateway_plugin_post_function/data-source.tf
  - examples/data-sources/kong-gateway_plugin_pre_function/data-source.tf
  - examples/data-sources/kong-gateway_plugin_prometheus/data-source.tf
  - examples/data-sources/kong-gateway_plugin_proxy_cache/data-source.tf
  - examples/data-sources/kong-gateway_plugin_proxy_cache_advanced/data-source.tf
  - examples/data-sources/kong-gateway_plugin_rate_limiting/data-source.tf
  - examples/data-sources/kong-gateway_plugin_rate_limiting_advanced/data-source.tf
  - examples/data-sources/kong-gateway_plugin_request_size_limiting/data-source.tf
  - examples/data-sources/kong-gateway_plugin_request_termination/data-source.tf
  - examples/data-sources/kong-gateway_plugin_request_transformer/data-source.tf
  - examples/data-sources/kong-gateway_plugin_request_transformer_advanced/data-source.tf
  - examples/data-sources/kong-gateway_plugin_request_validator/data-source.tf
  - examples/data-sources/kong-gateway_plugin_response_ratelimiting/data-source.tf
  - examples/data-sources/kong-gateway_plugin_response_transformer/data-source.tf
  - examples/data-sources/kong-gateway_plugin_response_transformer_advanced/data-source.tf
  - examples/data-sources/kong-gateway_plugin_route_by_header/data-source.tf
  - examples/data-sources/kong-gateway_plugin_route_transformer_advanced/data-source.tf
  - examples/data-sources/kong-gateway_plugin_saml/data-source.tf
  - examples/data-sources/kong-gateway_plugin_session/data-source.tf
  - examples/data-sources/kong-gateway_plugin_statsd/data-source.tf
  - examples/data-sources/kong-gateway_plugin_statsd_advanced/data-source.tf
  - examples/data-sources/kong-gateway_plugin_syslog/data-source.tf
  - examples/data-sources/kong-gateway_plugin_tcp_log/data-source.tf
  - examples/data-sources/kong-gateway_plugin_tls_handshake_modifier/data-source.tf
  - examples/data-sources/kong-gateway_plugin_tls_metadata_headers/data-source.tf
  - examples/data-sources/kong-gateway_plugin_udp_log/data-source.tf
  - examples/data-sources/kong-gateway_plugin_upstream_timeout/data-source.tf
  - examples/data-sources/kong-gateway_plugin_vault_auth/data-source.tf
  - examples/data-sources/kong-gateway_plugin_websocket_size_limit/data-source.tf
  - examples/data-sources/kong-gateway_plugin_websocket_validator/data-source.tf
  - examples/data-sources/kong-gateway_plugin_xml_threat_protection/data-source.tf
  - examples/data-sources/kong-gateway_plugin_zipkin/data-source.tf
  - examples/data-sources/kong-gateway_route/data-source.tf
  - examples/data-sources/kong-gateway_service/data-source.tf
  - examples/data-sources/kong-gateway_sni/data-source.tf
  - examples/data-sources/kong-gateway_upstream/data-source.tf
  - examples/data-sources/kong-gateway_vault/data-source.tf
  - examples/provider/provider.tf
  - examples/resources/kong-gateway_acl/import.sh
  - examples/resources/kong-gateway_acl/resource.tf
  - examples/resources/kong-gateway_basic_auth/import.sh
  - examples/resources/kong-gateway_basic_auth/resource.tf
  - examples/resources/kong-gateway_ca_certificate/import.sh
  - examples/resources/kong-gateway_ca_certificate/resource.tf
  - examples/resources/kong-gateway_certificate/import.sh
  - examples/resources/kong-gateway_certificate/resource.tf
  - examples/resources/kong-gateway_consumer/import.sh
  - examples/resources/kong-gateway_consumer/resource.tf
  - examples/resources/kong-gateway_consumer_group/import.sh
  - examples/resources/kong-gateway_consumer_group/resource.tf
  - examples/resources/kong-gateway_gateway_consumer_group_member/resource.tf
  - examples/resources/kong-gateway_hmac_auth/import.sh
  - examples/resources/kong-gateway_hmac_auth/resource.tf
  - examples/resources/kong-gateway_jwt/import.sh
  - examples/resources/kong-gateway_jwt/resource.tf
  - examples/resources/kong-gateway_key/import.sh
  - examples/resources/kong-gateway_key/resource.tf
  - examples/resources/kong-gateway_key_auth/import.sh
  - examples/resources/kong-gateway_key_auth/resource.tf
  - examples/resources/kong-gateway_key_set/import.sh
  - examples/resources/kong-gateway_key_set/resource.tf
  - examples/resources/kong-gateway_mtls_auth/import.sh
  - examples/resources/kong-gateway_mtls_auth/resource.tf
  - examples/resources/kong-gateway_plugin_acl/import.sh
  - examples/resources/kong-gateway_plugin_acl/resource.tf
  - examples/resources/kong-gateway_plugin_acme/import.sh
  - examples/resources/kong-gateway_plugin_acme/resource.tf
  - examples/resources/kong-gateway_plugin_ai_prompt_decorator/import.sh
  - examples/resources/kong-gateway_plugin_ai_prompt_decorator/resource.tf
  - examples/resources/kong-gateway_plugin_ai_prompt_guard/import.sh
  - examples/resources/kong-gateway_plugin_ai_prompt_guard/resource.tf
  - examples/resources/kong-gateway_plugin_ai_prompt_template/import.sh
  - examples/resources/kong-gateway_plugin_ai_prompt_template/resource.tf
  - examples/resources/kong-gateway_plugin_ai_proxy/import.sh
  - examples/resources/kong-gateway_plugin_ai_proxy/resource.tf
  - examples/resources/kong-gateway_plugin_ai_request_transformer/import.sh
  - examples/resources/kong-gateway_plugin_ai_request_transformer/resource.tf
  - examples/resources/kong-gateway_plugin_ai_response_transformer/import.sh
  - examples/resources/kong-gateway_plugin_ai_response_transformer/resource.tf
  - examples/resources/kong-gateway_plugin_aws_lambda/import.sh
  - examples/resources/kong-gateway_plugin_aws_lambda/resource.tf
  - examples/resources/kong-gateway_plugin_azure_functions/import.sh
  - examples/resources/kong-gateway_plugin_azure_functions/resource.tf
  - examples/resources/kong-gateway_plugin_basic_auth/import.sh
  - examples/resources/kong-gateway_plugin_basic_auth/resource.tf
  - examples/resources/kong-gateway_plugin_bot_detection/import.sh
  - examples/resources/kong-gateway_plugin_bot_detection/resource.tf
  - examples/resources/kong-gateway_plugin_canary/import.sh
  - examples/resources/kong-gateway_plugin_canary/resource.tf
  - examples/resources/kong-gateway_plugin_correlation_id/import.sh
  - examples/resources/kong-gateway_plugin_correlation_id/resource.tf
  - examples/resources/kong-gateway_plugin_cors/import.sh
  - examples/resources/kong-gateway_plugin_cors/resource.tf
  - examples/resources/kong-gateway_plugin_datadog/import.sh
  - examples/resources/kong-gateway_plugin_datadog/resource.tf
  - examples/resources/kong-gateway_plugin_degraphql/import.sh
  - examples/resources/kong-gateway_plugin_degraphql/resource.tf
  - examples/resources/kong-gateway_plugin_exit_transformer/import.sh
  - examples/resources/kong-gateway_plugin_exit_transformer/resource.tf
  - examples/resources/kong-gateway_plugin_file_log/import.sh
  - examples/resources/kong-gateway_plugin_file_log/resource.tf
  - examples/resources/kong-gateway_plugin_forward_proxy/import.sh
  - examples/resources/kong-gateway_plugin_forward_proxy/resource.tf
  - examples/resources/kong-gateway_plugin_graphql_proxy_cache_advanced/import.sh
  - examples/resources/kong-gateway_plugin_graphql_proxy_cache_advanced/resource.tf
  - examples/resources/kong-gateway_plugin_graphql_rate_limiting_advanced/import.sh
  - examples/resources/kong-gateway_plugin_graphql_rate_limiting_advanced/resource.tf
  - examples/resources/kong-gateway_plugin_grpc_gateway/import.sh
  - examples/resources/kong-gateway_plugin_grpc_gateway/resource.tf
  - examples/resources/kong-gateway_plugin_grpc_web/import.sh
  - examples/resources/kong-gateway_plugin_grpc_web/resource.tf
  - examples/resources/kong-gateway_plugin_hmac_auth/import.sh
  - examples/resources/kong-gateway_plugin_hmac_auth/resource.tf
  - examples/resources/kong-gateway_plugin_http_log/import.sh
  - examples/resources/kong-gateway_plugin_http_log/resource.tf
  - examples/resources/kong-gateway_plugin_ip_restriction/import.sh
  - examples/resources/kong-gateway_plugin_ip_restriction/resource.tf
  - examples/resources/kong-gateway_plugin_jq/import.sh
  - examples/resources/kong-gateway_plugin_jq/resource.tf
  - examples/resources/kong-gateway_plugin_jwe_decrypt/import.sh
  - examples/resources/kong-gateway_plugin_jwe_decrypt/resource.tf
  - examples/resources/kong-gateway_plugin_jwt/import.sh
  - examples/resources/kong-gateway_plugin_jwt/resource.tf
  - examples/resources/kong-gateway_plugin_jwt_signer/import.sh
  - examples/resources/kong-gateway_plugin_jwt_signer/resource.tf
  - examples/resources/kong-gateway_plugin_kafka_log/import.sh
  - examples/resources/kong-gateway_plugin_kafka_log/resource.tf
  - examples/resources/kong-gateway_plugin_kafka_upstream/import.sh
  - examples/resources/kong-gateway_plugin_kafka_upstream/resource.tf
  - examples/resources/kong-gateway_plugin_key_auth/import.sh
  - examples/resources/kong-gateway_plugin_key_auth/resource.tf
  - examples/resources/kong-gateway_plugin_key_auth_enc/import.sh
  - examples/resources/kong-gateway_plugin_key_auth_enc/resource.tf
  - examples/resources/kong-gateway_plugin_konnect_application_auth/import.sh
  - examples/resources/kong-gateway_plugin_konnect_application_auth/resource.tf
  - examples/resources/kong-gateway_plugin_ldap_auth/import.sh
  - examples/resources/kong-gateway_plugin_ldap_auth/resource.tf
  - examples/resources/kong-gateway_plugin_ldap_auth_advanced/import.sh
  - examples/resources/kong-gateway_plugin_ldap_auth_advanced/resource.tf
  - examples/resources/kong-gateway_plugin_loggly/import.sh
  - examples/resources/kong-gateway_plugin_loggly/resource.tf
  - examples/resources/kong-gateway_plugin_mocking/import.sh
  - examples/resources/kong-gateway_plugin_mocking/resource.tf
  - examples/resources/kong-gateway_plugin_mtls_auth/import.sh
  - examples/resources/kong-gateway_plugin_mtls_auth/resource.tf
  - examples/resources/kong-gateway_plugin_oas_validation/import.sh
  - examples/resources/kong-gateway_plugin_oas_validation/resource.tf
  - examples/resources/kong-gateway_plugin_oauth2/import.sh
  - examples/resources/kong-gateway_plugin_oauth2/resource.tf
  - examples/resources/kong-gateway_plugin_oauth2_introspection/import.sh
  - examples/resources/kong-gateway_plugin_oauth2_introspection/resource.tf
  - examples/resources/kong-gateway_plugin_opa/import.sh
  - examples/resources/kong-gateway_plugin_opa/resource.tf
  - examples/resources/kong-gateway_plugin_openid_connect/import.sh
  - examples/resources/kong-gateway_plugin_openid_connect/resource.tf
  - examples/resources/kong-gateway_plugin_opentelemetry/import.sh
  - examples/resources/kong-gateway_plugin_opentelemetry/resource.tf
  - examples/resources/kong-gateway_plugin_post_function/import.sh
  - examples/resources/kong-gateway_plugin_post_function/resource.tf
  - examples/resources/kong-gateway_plugin_pre_function/import.sh
  - examples/resources/kong-gateway_plugin_pre_function/resource.tf
  - examples/resources/kong-gateway_plugin_prometheus/import.sh
  - examples/resources/kong-gateway_plugin_prometheus/resource.tf
  - examples/resources/kong-gateway_plugin_proxy_cache/import.sh
  - examples/resources/kong-gateway_plugin_proxy_cache/resource.tf
  - examples/resources/kong-gateway_plugin_proxy_cache_advanced/import.sh
  - examples/resources/kong-gateway_plugin_proxy_cache_advanced/resource.tf
  - examples/resources/kong-gateway_plugin_rate_limiting/import.sh
  - examples/resources/kong-gateway_plugin_rate_limiting/resource.tf
  - examples/resources/kong-gateway_plugin_rate_limiting_advanced/import.sh
  - examples/resources/kong-gateway_plugin_rate_limiting_advanced/resource.tf
  - examples/resources/kong-gateway_plugin_request_size_limiting/import.sh
  - examples/resources/kong-gateway_plugin_request_size_limiting/resource.tf
  - examples/resources/kong-gateway_plugin_request_termination/import.sh
  - examples/resources/kong-gateway_plugin_request_termination/resource.tf
  - examples/resources/kong-gateway_plugin_request_transformer/import.sh
  - examples/resources/kong-gateway_plugin_request_transformer/resource.tf
  - examples/resources/kong-gateway_plugin_request_transformer_advanced/import.sh
  - examples/resources/kong-gateway_plugin_request_transformer_advanced/resource.tf
  - examples/resources/kong-gateway_plugin_request_validator/import.sh
  - examples/resources/kong-gateway_plugin_request_validator/resource.tf
  - examples/resources/kong-gateway_plugin_response_ratelimiting/import.sh
  - examples/resources/kong-gateway_plugin_response_ratelimiting/resource.tf
  - examples/resources/kong-gateway_plugin_response_transformer/import.sh
  - examples/resources/kong-gateway_plugin_response_transformer/resource.tf
  - examples/resources/kong-gateway_plugin_response_transformer_advanced/import.sh
  - examples/resources/kong-gateway_plugin_response_transformer_advanced/resource.tf
  - examples/resources/kong-gateway_plugin_route_by_header/import.sh
  - examples/resources/kong-gateway_plugin_route_by_header/resource.tf
  - examples/resources/kong-gateway_plugin_route_transformer_advanced/import.sh
  - examples/resources/kong-gateway_plugin_route_transformer_advanced/resource.tf
  - examples/resources/kong-gateway_plugin_saml/import.sh
  - examples/resources/kong-gateway_plugin_saml/resource.tf
  - examples/resources/kong-gateway_plugin_session/import.sh
  - examples/resources/kong-gateway_plugin_session/resource.tf
  - examples/resources/kong-gateway_plugin_statsd/import.sh
  - examples/resources/kong-gateway_plugin_statsd/resource.tf
  - examples/resources/kong-gateway_plugin_statsd_advanced/import.sh
  - examples/resources/kong-gateway_plugin_statsd_advanced/resource.tf
  - examples/resources/kong-gateway_plugin_syslog/import.sh
  - examples/resources/kong-gateway_plugin_syslog/resource.tf
  - examples/resources/kong-gateway_plugin_tcp_log/import.sh
  - examples/resources/kong-gateway_plugin_tcp_log/resource.tf
  - examples/resources/kong-gateway_plugin_tls_handshake_modifier/import.sh
  - examples/resources/kong-gateway_plugin_tls_handshake_modifier/resource.tf
  - examples/resources/kong-gateway_plugin_tls_metadata_headers/import.sh
  - examples/resources/kong-gateway_plugin_tls_metadata_headers/resource.tf
  - examples/resources/kong-gateway_plugin_udp_log/import.sh
  - examples/resources/kong-gateway_plugin_udp_log/resource.tf
  - examples/resources/kong-gateway_plugin_upstream_timeout/import.sh
  - examples/resources/kong-gateway_plugin_upstream_timeout/resource.tf
  - examples/resources/kong-gateway_plugin_vault_auth/import.sh
  - examples/resources/kong-gateway_plugin_vault_auth/resource.tf
  - examples/resources/kong-gateway_plugin_websocket_size_limit/import.sh
  - examples/resources/kong-gateway_plugin_websocket_size_limit/resource.tf
  - examples/resources/kong-gateway_plugin_websocket_validator/import.sh
  - examples/resources/kong-gateway_plugin_websocket_validator/resource.tf
  - examples/resources/kong-gateway_plugin_xml_threat_protection/import.sh
  - examples/resources/kong-gateway_plugin_xml_threat_protection/resource.tf
  - examples/resources/kong-gateway_plugin_zipkin/import.sh
  - examples/resources/kong-gateway_plugin_zipkin/resource.tf
  - examples/resources/kong-gateway_route/import.sh
  - examples/resources/kong-gateway_route/resource.tf
  - examples/resources/kong-gateway_service/import.sh
  - examples/resources/kong-gateway_service/resource.tf
  - examples/resources/kong-gateway_sni/import.sh
  - examples/resources/kong-gateway_sni/resource.tf
  - examples/resources/kong-gateway_upstream/import.sh
  - examples/resources/kong-gateway_upstream/resource.tf
  - examples/resources/kong-gateway_vault/import.sh
  - examples/resources/kong-gateway_vault/resource.tf
  - go.mod
  - go.sum
  - internal/planmodifiers/boolplanmodifier/suppress_diff.go
  - internal/planmodifiers/float64planmodifier/suppress_diff.go
  - internal/planmodifiers/int64planmodifier/suppress_diff.go
  - internal/planmodifiers/listplanmodifier/suppress_diff.go
  - internal/planmodifiers/mapplanmodifier/suppress_diff.go
  - internal/planmodifiers/numberplanmodifier/suppress_diff.go
  - internal/planmodifiers/objectplanmodifier/suppress_diff.go
  - internal/planmodifiers/setplanmodifier/suppress_diff.go
  - internal/planmodifiers/stringplanmodifier/suppress_diff.go
  - internal/planmodifiers/utils/state_check.go
  - internal/provider/acl_data_source.go
  - internal/provider/acl_data_source_sdk.go
  - internal/provider/acl_resource.go
  - internal/provider/acl_resource_sdk.go
  - internal/provider/basicauth_data_source.go
  - internal/provider/basicauth_data_source_sdk.go
  - internal/provider/basicauth_resource.go
  - internal/provider/basicauth_resource_sdk.go
  - internal/provider/cacertificate_data_source.go
  - internal/provider/cacertificate_data_source_sdk.go
  - internal/provider/cacertificate_resource.go
  - internal/provider/cacertificate_resource_sdk.go
  - internal/provider/certificate_data_source.go
  - internal/provider/certificate_data_source_sdk.go
  - internal/provider/certificate_resource.go
  - internal/provider/certificate_resource_sdk.go
  - internal/provider/consumer_data_source.go
  - internal/provider/consumer_data_source_sdk.go
  - internal/provider/consumer_resource.go
  - internal/provider/consumer_resource_sdk.go
  - internal/provider/consumergroup_data_source.go
  - internal/provider/consumergroup_data_source_sdk.go
  - internal/provider/consumergroup_resource.go
  - internal/provider/consumergroup_resource_sdk.go
  - internal/provider/gatewayconsumergroupmember_resource.go
  - internal/provider/gatewayconsumergroupmember_resource_sdk.go
  - internal/provider/hmacauth_data_source.go
  - internal/provider/hmacauth_data_source_sdk.go
  - internal/provider/hmacauth_resource.go
  - internal/provider/hmacauth_resource_sdk.go
  - internal/provider/jwt_data_source.go
  - internal/provider/jwt_data_source_sdk.go
  - internal/provider/jwt_resource.go
  - internal/provider/jwt_resource_sdk.go
  - internal/provider/key_data_source.go
  - internal/provider/key_data_source_sdk.go
  - internal/provider/key_resource.go
  - internal/provider/key_resource_sdk.go
  - internal/provider/keyauth_data_source.go
  - internal/provider/keyauth_data_source_sdk.go
  - internal/provider/keyauth_resource.go
  - internal/provider/keyauth_resource_sdk.go
  - internal/provider/keyset_data_source.go
  - internal/provider/keyset_data_source_sdk.go
  - internal/provider/keyset_resource.go
  - internal/provider/keyset_resource_sdk.go
  - internal/provider/mtlsauth_data_source.go
  - internal/provider/mtlsauth_data_source_sdk.go
  - internal/provider/mtlsauth_resource.go
  - internal/provider/mtlsauth_resource_sdk.go
  - internal/provider/pluginacl_data_source.go
  - internal/provider/pluginacl_data_source_sdk.go
  - internal/provider/pluginacl_resource.go
  - internal/provider/pluginacl_resource_sdk.go
  - internal/provider/pluginacme_data_source.go
  - internal/provider/pluginacme_data_source_sdk.go
  - internal/provider/pluginacme_resource.go
  - internal/provider/pluginacme_resource_sdk.go
  - internal/provider/pluginaipromptdecorator_data_source.go
  - internal/provider/pluginaipromptdecorator_data_source_sdk.go
  - internal/provider/pluginaipromptdecorator_resource.go
  - internal/provider/pluginaipromptdecorator_resource_sdk.go
  - internal/provider/pluginaipromptguard_data_source.go
  - internal/provider/pluginaipromptguard_data_source_sdk.go
  - internal/provider/pluginaipromptguard_resource.go
  - internal/provider/pluginaipromptguard_resource_sdk.go
  - internal/provider/pluginaiprompttemplate_data_source.go
  - internal/provider/pluginaiprompttemplate_data_source_sdk.go
  - internal/provider/pluginaiprompttemplate_resource.go
  - internal/provider/pluginaiprompttemplate_resource_sdk.go
  - internal/provider/pluginaiproxy_data_source.go
  - internal/provider/pluginaiproxy_data_source_sdk.go
  - internal/provider/pluginaiproxy_resource.go
  - internal/provider/pluginaiproxy_resource_sdk.go
  - internal/provider/pluginairequesttransformer_data_source.go
  - internal/provider/pluginairequesttransformer_data_source_sdk.go
  - internal/provider/pluginairequesttransformer_resource.go
  - internal/provider/pluginairequesttransformer_resource_sdk.go
  - internal/provider/pluginairesponsetransformer_data_source.go
  - internal/provider/pluginairesponsetransformer_data_source_sdk.go
  - internal/provider/pluginairesponsetransformer_resource.go
  - internal/provider/pluginairesponsetransformer_resource_sdk.go
  - internal/provider/pluginawslambda_data_source.go
  - internal/provider/pluginawslambda_data_source_sdk.go
  - internal/provider/pluginawslambda_resource.go
  - internal/provider/pluginawslambda_resource_sdk.go
  - internal/provider/pluginazurefunctions_data_source.go
  - internal/provider/pluginazurefunctions_data_source_sdk.go
  - internal/provider/pluginazurefunctions_resource.go
  - internal/provider/pluginazurefunctions_resource_sdk.go
  - internal/provider/pluginbasicauth_data_source.go
  - internal/provider/pluginbasicauth_data_source_sdk.go
  - internal/provider/pluginbasicauth_resource.go
  - internal/provider/pluginbasicauth_resource_sdk.go
  - internal/provider/pluginbotdetection_data_source.go
  - internal/provider/pluginbotdetection_data_source_sdk.go
  - internal/provider/pluginbotdetection_resource.go
  - internal/provider/pluginbotdetection_resource_sdk.go
  - internal/provider/plugincanary_data_source.go
  - internal/provider/plugincanary_data_source_sdk.go
  - internal/provider/plugincanary_resource.go
  - internal/provider/plugincanary_resource_sdk.go
  - internal/provider/plugincorrelationid_data_source.go
  - internal/provider/plugincorrelationid_data_source_sdk.go
  - internal/provider/plugincorrelationid_resource.go
  - internal/provider/plugincorrelationid_resource_sdk.go
  - internal/provider/plugincors_data_source.go
  - internal/provider/plugincors_data_source_sdk.go
  - internal/provider/plugincors_resource.go
  - internal/provider/plugincors_resource_sdk.go
  - internal/provider/plugindatadog_data_source.go
  - internal/provider/plugindatadog_data_source_sdk.go
  - internal/provider/plugindatadog_resource.go
  - internal/provider/plugindatadog_resource_sdk.go
  - internal/provider/plugindegraphql_data_source.go
  - internal/provider/plugindegraphql_data_source_sdk.go
  - internal/provider/plugindegraphql_resource.go
  - internal/provider/plugindegraphql_resource_sdk.go
  - internal/provider/pluginexittransformer_data_source.go
  - internal/provider/pluginexittransformer_data_source_sdk.go
  - internal/provider/pluginexittransformer_resource.go
  - internal/provider/pluginexittransformer_resource_sdk.go
  - internal/provider/pluginfilelog_data_source.go
  - internal/provider/pluginfilelog_data_source_sdk.go
  - internal/provider/pluginfilelog_resource.go
  - internal/provider/pluginfilelog_resource_sdk.go
  - internal/provider/pluginforwardproxy_data_source.go
  - internal/provider/pluginforwardproxy_data_source_sdk.go
  - internal/provider/pluginforwardproxy_resource.go
  - internal/provider/pluginforwardproxy_resource_sdk.go
  - internal/provider/plugingraphqlproxycacheadvanced_data_source.go
  - internal/provider/plugingraphqlproxycacheadvanced_data_source_sdk.go
  - internal/provider/plugingraphqlproxycacheadvanced_resource.go
  - internal/provider/plugingraphqlproxycacheadvanced_resource_sdk.go
  - internal/provider/plugingraphqlratelimitingadvanced_data_source.go
  - internal/provider/plugingraphqlratelimitingadvanced_data_source_sdk.go
  - internal/provider/plugingraphqlratelimitingadvanced_resource.go
  - internal/provider/plugingraphqlratelimitingadvanced_resource_sdk.go
  - internal/provider/plugingrpcgateway_data_source.go
  - internal/provider/plugingrpcgateway_data_source_sdk.go
  - internal/provider/plugingrpcgateway_resource.go
  - internal/provider/plugingrpcgateway_resource_sdk.go
  - internal/provider/plugingrpcweb_data_source.go
  - internal/provider/plugingrpcweb_data_source_sdk.go
  - internal/provider/plugingrpcweb_resource.go
  - internal/provider/plugingrpcweb_resource_sdk.go
  - internal/provider/pluginhmacauth_data_source.go
  - internal/provider/pluginhmacauth_data_source_sdk.go
  - internal/provider/pluginhmacauth_resource.go
  - internal/provider/pluginhmacauth_resource_sdk.go
  - internal/provider/pluginhttplog_data_source.go
  - internal/provider/pluginhttplog_data_source_sdk.go
  - internal/provider/pluginhttplog_resource.go
  - internal/provider/pluginhttplog_resource_sdk.go
  - internal/provider/pluginiprestriction_data_source.go
  - internal/provider/pluginiprestriction_data_source_sdk.go
  - internal/provider/pluginiprestriction_resource.go
  - internal/provider/pluginiprestriction_resource_sdk.go
  - internal/provider/pluginjq_data_source.go
  - internal/provider/pluginjq_data_source_sdk.go
  - internal/provider/pluginjq_resource.go
  - internal/provider/pluginjq_resource_sdk.go
  - internal/provider/pluginjwedecrypt_data_source.go
  - internal/provider/pluginjwedecrypt_data_source_sdk.go
  - internal/provider/pluginjwedecrypt_resource.go
  - internal/provider/pluginjwedecrypt_resource_sdk.go
  - internal/provider/pluginjwt_data_source.go
  - internal/provider/pluginjwt_data_source_sdk.go
  - internal/provider/pluginjwt_resource.go
  - internal/provider/pluginjwt_resource_sdk.go
  - internal/provider/pluginjwtsigner_data_source.go
  - internal/provider/pluginjwtsigner_data_source_sdk.go
  - internal/provider/pluginjwtsigner_resource.go
  - internal/provider/pluginjwtsigner_resource_sdk.go
  - internal/provider/pluginkafkalog_data_source.go
  - internal/provider/pluginkafkalog_data_source_sdk.go
  - internal/provider/pluginkafkalog_resource.go
  - internal/provider/pluginkafkalog_resource_sdk.go
  - internal/provider/pluginkafkaupstream_data_source.go
  - internal/provider/pluginkafkaupstream_data_source_sdk.go
  - internal/provider/pluginkafkaupstream_resource.go
  - internal/provider/pluginkafkaupstream_resource_sdk.go
  - internal/provider/pluginkeyauth_data_source.go
  - internal/provider/pluginkeyauth_data_source_sdk.go
  - internal/provider/pluginkeyauth_resource.go
  - internal/provider/pluginkeyauth_resource_sdk.go
  - internal/provider/pluginkeyauthenc_data_source.go
  - internal/provider/pluginkeyauthenc_data_source_sdk.go
  - internal/provider/pluginkeyauthenc_resource.go
  - internal/provider/pluginkeyauthenc_resource_sdk.go
  - internal/provider/pluginkonnectapplicationauth_data_source.go
  - internal/provider/pluginkonnectapplicationauth_data_source_sdk.go
  - internal/provider/pluginkonnectapplicationauth_resource.go
  - internal/provider/pluginkonnectapplicationauth_resource_sdk.go
  - internal/provider/pluginldapauth_data_source.go
  - internal/provider/pluginldapauth_data_source_sdk.go
  - internal/provider/pluginldapauth_resource.go
  - internal/provider/pluginldapauth_resource_sdk.go
  - internal/provider/pluginldapauthadvanced_data_source.go
  - internal/provider/pluginldapauthadvanced_data_source_sdk.go
  - internal/provider/pluginldapauthadvanced_resource.go
  - internal/provider/pluginldapauthadvanced_resource_sdk.go
  - internal/provider/pluginloggly_data_source.go
  - internal/provider/pluginloggly_data_source_sdk.go
  - internal/provider/pluginloggly_resource.go
  - internal/provider/pluginloggly_resource_sdk.go
  - internal/provider/pluginmocking_data_source.go
  - internal/provider/pluginmocking_data_source_sdk.go
  - internal/provider/pluginmocking_resource.go
  - internal/provider/pluginmocking_resource_sdk.go
  - internal/provider/pluginmtlsauth_data_source.go
  - internal/provider/pluginmtlsauth_data_source_sdk.go
  - internal/provider/pluginmtlsauth_resource.go
  - internal/provider/pluginmtlsauth_resource_sdk.go
  - internal/provider/pluginoasvalidation_data_source.go
  - internal/provider/pluginoasvalidation_data_source_sdk.go
  - internal/provider/pluginoasvalidation_resource.go
  - internal/provider/pluginoasvalidation_resource_sdk.go
  - internal/provider/pluginoauth2_data_source.go
  - internal/provider/pluginoauth2_data_source_sdk.go
  - internal/provider/pluginoauth2_resource.go
  - internal/provider/pluginoauth2_resource_sdk.go
  - internal/provider/pluginoauth2introspection_data_source.go
  - internal/provider/pluginoauth2introspection_data_source_sdk.go
  - internal/provider/pluginoauth2introspection_resource.go
  - internal/provider/pluginoauth2introspection_resource_sdk.go
  - internal/provider/pluginopa_data_source.go
  - internal/provider/pluginopa_data_source_sdk.go
  - internal/provider/pluginopa_resource.go
  - internal/provider/pluginopa_resource_sdk.go
  - internal/provider/pluginopenidconnect_data_source.go
  - internal/provider/pluginopenidconnect_data_source_sdk.go
  - internal/provider/pluginopenidconnect_resource.go
  - internal/provider/pluginopenidconnect_resource_sdk.go
  - internal/provider/pluginopentelemetry_data_source.go
  - internal/provider/pluginopentelemetry_data_source_sdk.go
  - internal/provider/pluginopentelemetry_resource.go
  - internal/provider/pluginopentelemetry_resource_sdk.go
  - internal/provider/pluginpostfunction_data_source.go
  - internal/provider/pluginpostfunction_data_source_sdk.go
  - internal/provider/pluginpostfunction_resource.go
  - internal/provider/pluginpostfunction_resource_sdk.go
  - internal/provider/pluginprefunction_data_source.go
  - internal/provider/pluginprefunction_data_source_sdk.go
  - internal/provider/pluginprefunction_resource.go
  - internal/provider/pluginprefunction_resource_sdk.go
  - internal/provider/pluginprometheus_data_source.go
  - internal/provider/pluginprometheus_data_source_sdk.go
  - internal/provider/pluginprometheus_resource.go
  - internal/provider/pluginprometheus_resource_sdk.go
  - internal/provider/pluginproxycache_data_source.go
  - internal/provider/pluginproxycache_data_source_sdk.go
  - internal/provider/pluginproxycache_resource.go
  - internal/provider/pluginproxycache_resource_sdk.go
  - internal/provider/pluginproxycacheadvanced_data_source.go
  - internal/provider/pluginproxycacheadvanced_data_source_sdk.go
  - internal/provider/pluginproxycacheadvanced_resource.go
  - internal/provider/pluginproxycacheadvanced_resource_sdk.go
  - internal/provider/pluginratelimiting_data_source.go
  - internal/provider/pluginratelimiting_data_source_sdk.go
  - internal/provider/pluginratelimiting_resource.go
  - internal/provider/pluginratelimiting_resource_sdk.go
  - internal/provider/pluginratelimitingadvanced_data_source.go
  - internal/provider/pluginratelimitingadvanced_data_source_sdk.go
  - internal/provider/pluginratelimitingadvanced_resource.go
  - internal/provider/pluginratelimitingadvanced_resource_sdk.go
  - internal/provider/pluginrequestsizelimiting_data_source.go
  - internal/provider/pluginrequestsizelimiting_data_source_sdk.go
  - internal/provider/pluginrequestsizelimiting_resource.go
  - internal/provider/pluginrequestsizelimiting_resource_sdk.go
  - internal/provider/pluginrequesttermination_data_source.go
  - internal/provider/pluginrequesttermination_data_source_sdk.go
  - internal/provider/pluginrequesttermination_resource.go
  - internal/provider/pluginrequesttermination_resource_sdk.go
  - internal/provider/pluginrequesttransformer_data_source.go
  - internal/provider/pluginrequesttransformer_data_source_sdk.go
  - internal/provider/pluginrequesttransformer_resource.go
  - internal/provider/pluginrequesttransformer_resource_sdk.go
  - internal/provider/pluginrequesttransformeradvanced_data_source.go
  - internal/provider/pluginrequesttransformeradvanced_data_source_sdk.go
  - internal/provider/pluginrequesttransformeradvanced_resource.go
  - internal/provider/pluginrequesttransformeradvanced_resource_sdk.go
  - internal/provider/pluginrequestvalidator_data_source.go
  - internal/provider/pluginrequestvalidator_data_source_sdk.go
  - internal/provider/pluginrequestvalidator_resource.go
  - internal/provider/pluginrequestvalidator_resource_sdk.go
  - internal/provider/pluginresponseratelimiting_data_source.go
  - internal/provider/pluginresponseratelimiting_data_source_sdk.go
  - internal/provider/pluginresponseratelimiting_resource.go
  - internal/provider/pluginresponseratelimiting_resource_sdk.go
  - internal/provider/pluginresponsetransformer_data_source.go
  - internal/provider/pluginresponsetransformer_data_source_sdk.go
  - internal/provider/pluginresponsetransformer_resource.go
  - internal/provider/pluginresponsetransformer_resource_sdk.go
  - internal/provider/pluginresponsetransformeradvanced_data_source.go
  - internal/provider/pluginresponsetransformeradvanced_data_source_sdk.go
  - internal/provider/pluginresponsetransformeradvanced_resource.go
  - internal/provider/pluginresponsetransformeradvanced_resource_sdk.go
  - internal/provider/pluginroutebyheader_data_source.go
  - internal/provider/pluginroutebyheader_data_source_sdk.go
  - internal/provider/pluginroutebyheader_resource.go
  - internal/provider/pluginroutebyheader_resource_sdk.go
  - internal/provider/pluginroutetransformeradvanced_data_source.go
  - internal/provider/pluginroutetransformeradvanced_data_source_sdk.go
  - internal/provider/pluginroutetransformeradvanced_resource.go
  - internal/provider/pluginroutetransformeradvanced_resource_sdk.go
  - internal/provider/pluginsaml_data_source.go
  - internal/provider/pluginsaml_data_source_sdk.go
  - internal/provider/pluginsaml_resource.go
  - internal/provider/pluginsaml_resource_sdk.go
  - internal/provider/pluginsession_data_source.go
  - internal/provider/pluginsession_data_source_sdk.go
  - internal/provider/pluginsession_resource.go
  - internal/provider/pluginsession_resource_sdk.go
  - internal/provider/pluginstatsd_data_source.go
  - internal/provider/pluginstatsd_data_source_sdk.go
  - internal/provider/pluginstatsd_resource.go
  - internal/provider/pluginstatsd_resource_sdk.go
  - internal/provider/pluginstatsdadvanced_data_source.go
  - internal/provider/pluginstatsdadvanced_data_source_sdk.go
  - internal/provider/pluginstatsdadvanced_resource.go
  - internal/provider/pluginstatsdadvanced_resource_sdk.go
  - internal/provider/pluginsyslog_data_source.go
  - internal/provider/pluginsyslog_data_source_sdk.go
  - internal/provider/pluginsyslog_resource.go
  - internal/provider/pluginsyslog_resource_sdk.go
  - internal/provider/plugintcplog_data_source.go
  - internal/provider/plugintcplog_data_source_sdk.go
  - internal/provider/plugintcplog_resource.go
  - internal/provider/plugintcplog_resource_sdk.go
  - internal/provider/plugintlshandshakemodifier_data_source.go
  - internal/provider/plugintlshandshakemodifier_data_source_sdk.go
  - internal/provider/plugintlshandshakemodifier_resource.go
  - internal/provider/plugintlshandshakemodifier_resource_sdk.go
  - internal/provider/plugintlsmetadataheaders_data_source.go
  - internal/provider/plugintlsmetadataheaders_data_source_sdk.go
  - internal/provider/plugintlsmetadataheaders_resource.go
  - internal/provider/plugintlsmetadataheaders_resource_sdk.go
  - internal/provider/pluginudplog_data_source.go
  - internal/provider/pluginudplog_data_source_sdk.go
  - internal/provider/pluginudplog_resource.go
  - internal/provider/pluginudplog_resource_sdk.go
  - internal/provider/pluginupstreamtimeout_data_source.go
  - internal/provider/pluginupstreamtimeout_data_source_sdk.go
  - internal/provider/pluginupstreamtimeout_resource.go
  - internal/provider/pluginupstreamtimeout_resource_sdk.go
  - internal/provider/pluginvaultauth_data_source.go
  - internal/provider/pluginvaultauth_data_source_sdk.go
  - internal/provider/pluginvaultauth_resource.go
  - internal/provider/pluginvaultauth_resource_sdk.go
  - internal/provider/pluginwebsocketsizelimit_data_source.go
  - internal/provider/pluginwebsocketsizelimit_data_source_sdk.go
  - internal/provider/pluginwebsocketsizelimit_resource.go
  - internal/provider/pluginwebsocketsizelimit_resource_sdk.go
  - internal/provider/pluginwebsocketvalidator_data_source.go
  - internal/provider/pluginwebsocketvalidator_data_source_sdk.go
  - internal/provider/pluginwebsocketvalidator_resource.go
  - internal/provider/pluginwebsocketvalidator_resource_sdk.go
  - internal/provider/pluginxmlthreatprotection_data_source.go
  - internal/provider/pluginxmlthreatprotection_data_source_sdk.go
  - internal/provider/pluginxmlthreatprotection_resource.go
  - internal/provider/pluginxmlthreatprotection_resource_sdk.go
  - internal/provider/pluginzipkin_data_source.go
  - internal/provider/pluginzipkin_data_source_sdk.go
  - internal/provider/pluginzipkin_resource.go
  - internal/provider/pluginzipkin_resource_sdk.go
  - internal/provider/provider.go
  - internal/provider/reflect/diags.go
  - internal/provider/reflect/doc.go
  - internal/provider/reflect/generic_attr_value.go
  - internal/provider/reflect/helpers.go
  - internal/provider/reflect/interfaces.go
  - internal/provider/reflect/into.go
  - internal/provider/reflect/map.go
  - internal/provider/reflect/number.go
  - internal/provider/reflect/options.go
  - internal/provider/reflect/outof.go
  - internal/provider/reflect/pointer.go
  - internal/provider/reflect/primitive.go
  - internal/provider/reflect/slice.go
  - internal/provider/reflect/struct.go
  - internal/provider/route_data_source.go
  - internal/provider/route_data_source_sdk.go
  - internal/provider/route_resource.go
  - internal/provider/route_resource_sdk.go
  - internal/provider/service_data_source.go
  - internal/provider/service_data_source_sdk.go
  - internal/provider/service_resource.go
  - internal/provider/service_resource_sdk.go
  - internal/provider/sni_data_source.go
  - internal/provider/sni_data_source_sdk.go
  - internal/provider/sni_resource.go
  - internal/provider/sni_resource_sdk.go
  - internal/provider/types/account_key.go
  - internal/provider/types/acl_consumer.go
  - internal/provider/types/acl_plugin_after.go
  - internal/provider/types/acl_plugin_ordering.go
  - internal/provider/types/acme_plugin_config.go
  - internal/provider/types/acme_plugin_redis.go
  - internal/provider/types/acme_plugin_vault.go
  - internal/provider/types/active.go
  - internal/provider/types/add.go
  - internal/provider/types/ai_prompt_decorator_plugin_append.go
  - internal/provider/types/ai_prompt_decorator_plugin_config.go
  - internal/provider/types/ai_prompt_guard_plugin_config.go
  - internal/provider/types/ai_prompt_template_plugin_config.go
  - internal/provider/types/ai_proxy_plugin_config.go
  - internal/provider/types/ai_request_transformer_plugin_config.go
  - internal/provider/types/ai_response_transformer_plugin_config.go
  - internal/provider/types/allow.go
  - internal/provider/types/auth.go
  - internal/provider/types/authentication.go
  - internal/provider/types/aws_lambda_plugin_config.go
  - internal/provider/types/azure_functions_plugin_config.go
  - internal/provider/types/basic_auth_plugin_config.go
  - internal/provider/types/bedrock.go
  - internal/provider/types/binary.go
  - internal/provider/types/bootstrap_servers.go
  - internal/provider/types/bot_detection_plugin_config.go
  - internal/provider/types/canary_plugin_config.go
  - internal/provider/types/client.go
  - internal/provider/types/cluster_nodes.go
  - internal/provider/types/config.go
  - internal/provider/types/consul.go
  - internal/provider/types/consumer.go
  - internal/provider/types/consumer_group.go
  - internal/provider/types/correlation_id_plugin_config.go
  - internal/provider/types/cors_plugin_config.go
  - internal/provider/types/datadog_plugin_config.go
  - internal/provider/types/degraphql_plugin_config.go
  - internal/provider/types/exit_transformer_plugin_config.go
  - internal/provider/types/extra_options.go
  - internal/provider/types/file_log_plugin_config.go
  - internal/provider/types/forward_proxy_plugin_config.go
  - internal/provider/types/gemini.go
  - internal/provider/types/graphql_proxy_cache_advanced_plugin_config.go
  - internal/provider/types/graphql_rate_limiting_advanced_plugin_config.go
  - internal/provider/types/grpc_gateway_plugin_config.go
  - internal/provider/types/grpc_web_plugin_config.go
  - internal/provider/types/healthchecks.go
  - internal/provider/types/healthy.go
  - internal/provider/types/hmac_auth_plugin_config.go
  - internal/provider/types/http_log_plugin_config.go
  - internal/provider/types/ip_restriction_plugin_config.go
  - internal/provider/types/jq_plugin_config.go
  - internal/provider/types/jwe_decrypt_plugin_config.go
  - internal/provider/types/jwt_plugin_config.go
  - internal/provider/types/jwt_signer_plugin_config.go
  - internal/provider/types/kafka_log_plugin_config.go
  - internal/provider/types/kafka_log_plugin_security.go
  - internal/provider/types/kafka_upstream_plugin_config.go
  - internal/provider/types/key_auth_plugin_config.go
  - internal/provider/types/konnect_application_auth_plugin_client_jwk.go
  - internal/provider/types/konnect_application_auth_plugin_config.go
  - internal/provider/types/konnect_application_auth_plugin_config_config.go
  - internal/provider/types/konnect_application_auth_plugin_config_v2_strategies_config.go
  - internal/provider/types/konnect_application_auth_plugin_key_auth.go
  - internal/provider/types/konnect_application_auth_plugin_redis.go
  - internal/provider/types/ldap_auth_advanced_plugin_config.go
  - internal/provider/types/ldap_auth_plugin_config.go
  - internal/provider/types/llm.go
  - internal/provider/types/logging.go
  - internal/provider/types/loggly_plugin_config.go
  - internal/provider/types/memory.go
  - internal/provider/types/metrics.go
  - internal/provider/types/mocking_plugin_config.go
  - internal/provider/types/model.go
  - internal/provider/types/mtls_auth_plugin_config.go
  - internal/provider/types/oas_validation_plugin_config.go
  - internal/provider/types/oauth2_introspection_plugin_config.go
  - internal/provider/types/oauth2_plugin_config.go
  - internal/provider/types/opa_plugin_config.go
  - internal/provider/types/openid_connect.go
  - internal/provider/types/openid_connect_plugin_config.go
  - internal/provider/types/opentelemetry_plugin_config.go
  - internal/provider/types/options_obj.go
  - internal/provider/types/parameter_schema.go
  - internal/provider/types/passive.go
  - internal/provider/types/pem.go
  - internal/provider/types/post_function_plugin_config.go
  - internal/provider/types/prometheus_plugin_config.go
  - internal/provider/types/prompts.go
  - internal/provider/types/propagation.go
  - internal/provider/types/proxy_cache_advanced_plugin_config.go
  - internal/provider/types/proxy_cache_plugin_config.go
  - internal/provider/types/queue.go
  - internal/provider/types/rate_limiting_advanced_plugin_config.go
  - internal/provider/types/rate_limiting_plugin_config.go
  - internal/provider/types/rate_limiting_plugin_redis.go
  - internal/provider/types/redis.go
  - internal/provider/types/replace.go
  - internal/provider/types/request_jq_program_options.go
  - internal/provider/types/request_size_limiting_plugin_config.go
  - internal/provider/types/request_termination_plugin_config.go
  - internal/provider/types/request_transformer_advanced_plugin_add.go
  - internal/provider/types/request_transformer_advanced_plugin_config.go
  - internal/provider/types/request_transformer_advanced_plugin_replace.go
  - internal/provider/types/request_transformer_plugin_config.go
  - internal/provider/types/request_validator_plugin_config.go
  - internal/provider/types/response_headers.go
  - internal/provider/types/response_ratelimiting_plugin_config.go
  - internal/provider/types/response_transformer_advanced_plugin_add.go
  - internal/provider/types/response_transformer_advanced_plugin_allow.go
  - internal/provider/types/response_transformer_advanced_plugin_config.go
  - internal/provider/types/response_transformer_advanced_plugin_remove.go
  - internal/provider/types/response_transformer_advanced_plugin_rename.go
  - internal/provider/types/response_transformer_advanced_plugin_replace.go
  - internal/provider/types/response_transformer_plugin_add.go
  - internal/provider/types/response_transformer_plugin_config.go
  - internal/provider/types/response_transformer_plugin_remove.go
  - internal/provider/types/route_by_header_plugin_config.go
  - internal/provider/types/route_transformer_advanced_plugin_config.go
  - internal/provider/types/rules.go
  - internal/provider/types/saml_plugin_config.go
  - internal/provider/types/sentinel_nodes.go
  - internal/provider/types/session_plugin_config.go
  - internal/provider/types/shm.go
  - internal/provider/types/static_tags.go
  - internal/provider/types/statsd_advanced_plugin_config.go
  - internal/provider/types/statsd_plugin_config.go
  - internal/provider/types/statsd_plugin_metrics.go
  - internal/provider/types/storage_config.go
  - internal/provider/types/syslog_plugin_config.go
  - internal/provider/types/tcp_log_plugin_config.go
  - internal/provider/types/templates.go
  - internal/provider/types/tls_handshake_modifier_plugin_config.go
  - internal/provider/types/tls_metadata_headers_plugin_config.go
  - internal/provider/types/transform.go
  - internal/provider/types/udp_log_plugin_config.go
  - internal/provider/types/unhealthy.go
  - internal/provider/types/upstream_healthy.go
  - internal/provider/types/upstream_timeout_plugin_config.go
  - internal/provider/types/upstream_unhealthy.go
  - internal/provider/types/v2_strategies.go
  - internal/provider/types/vault_auth_plugin_config.go
  - internal/provider/types/websocket_size_limit_plugin_config.go
  - internal/provider/types/websocket_validator_plugin_config.go
  - internal/provider/types/xml_threat_protection_plugin_config.go
  - internal/provider/types/zipkin_plugin_config.go
  - internal/provider/upstream_data_source.go
  - internal/provider/upstream_data_source_sdk.go
  - internal/provider/upstream_resource.go
  - internal/provider/upstream_resource_sdk.go
  - internal/provider/utils.go
  - internal/provider/vault_data_source.go
  - internal/provider/vault_data_source_sdk.go
  - internal/provider/vault_resource.go
  - internal/provider/vault_resource_sdk.go
  - internal/sdk/.gitattributes
  - internal/sdk/.gitignore
  - internal/sdk/CONTRIBUTING.md
  - internal/sdk/acls.go
  - internal/sdk/apikeys.go
  - internal/sdk/basicauthcredentials.go
  - internal/sdk/cacertificates.go
  - internal/sdk/certificates.go
  - internal/sdk/consumergroups.go
  - internal/sdk/consumers.go
  - internal/sdk/hmacauthcredentials.go
  - internal/sdk/internal/hooks/hooks.go
  - internal/sdk/internal/utils/contenttype.go
  - internal/sdk/internal/utils/env.go
  - internal/sdk/internal/utils/form.go
  - internal/sdk/internal/utils/headers.go
  - internal/sdk/internal/utils/json.go
  - internal/sdk/internal/utils/pathparams.go
  - internal/sdk/internal/utils/queryparams.go
  - internal/sdk/internal/utils/requestbody.go
  - internal/sdk/internal/utils/retries.go
  - internal/sdk/internal/utils/security.go
  - internal/sdk/internal/utils/utils.go
  - internal/sdk/jwts.go
  - internal/sdk/keyring.go
  - internal/sdk/keys.go
  - internal/sdk/keysets.go
  - internal/sdk/konggateway.go
  - internal/sdk/models/errors/sdkerror.go
  - internal/sdk/models/operations/addconsumertogroup.go
  - internal/sdk/models/operations/addconsumertospecificconsumergroup.go
  - internal/sdk/models/operations/addroletogroup.go
  - internal/sdk/models/operations/createacl.go
  - internal/sdk/models/operations/createaclplugin.go
  - internal/sdk/models/operations/createacmeplugin.go
  - internal/sdk/models/operations/createaipromptdecoratorplugin.go
  - internal/sdk/models/operations/createaipromptguardplugin.go
  - internal/sdk/models/operations/createaiprompttemplateplugin.go
  - internal/sdk/models/operations/createaiproxyplugin.go
  - internal/sdk/models/operations/createairequesttransformerplugin.go
  - internal/sdk/models/operations/createairesponsetransformerplugin.go
  - internal/sdk/models/operations/createawslambdaplugin.go
  - internal/sdk/models/operations/createazurefunctionsplugin.go
  - internal/sdk/models/operations/createbasicauth.go
  - internal/sdk/models/operations/createbasicauthplugin.go
  - internal/sdk/models/operations/createbotdetectionplugin.go
  - internal/sdk/models/operations/createcacertificate.go
  - internal/sdk/models/operations/createcanaryplugin.go
  - internal/sdk/models/operations/createcertificate.go
  - internal/sdk/models/operations/createconsumer.go
  - internal/sdk/models/operations/createconsumergroup.go
  - internal/sdk/models/operations/createcorrelationidplugin.go
  - internal/sdk/models/operations/createcorsplugin.go
  - internal/sdk/models/operations/createdatadogplugin.go
  - internal/sdk/models/operations/createdegraphqlplugin.go
  - internal/sdk/models/operations/createexittransformerplugin.go
  - internal/sdk/models/operations/createfilelogplugin.go
  - internal/sdk/models/operations/createforwardproxyplugin.go
  - internal/sdk/models/operations/creategraphqlproxycacheadvancedplugin.go
  - internal/sdk/models/operations/creategraphqlratelimitingadvancedplugin.go
  - internal/sdk/models/operations/creategroup.go
  - internal/sdk/models/operations/creategrpcgatewayplugin.go
  - internal/sdk/models/operations/creategrpcwebplugin.go
  - internal/sdk/models/operations/createhmacauth.go
  - internal/sdk/models/operations/createhmacauthplugin.go
  - internal/sdk/models/operations/createhttplogplugin.go
  - internal/sdk/models/operations/createiprestrictionplugin.go
  - internal/sdk/models/operations/createjqplugin.go
  - internal/sdk/models/operations/createjwedecryptplugin.go
  - internal/sdk/models/operations/createjwt.go
  - internal/sdk/models/operations/createjwtplugin.go
  - internal/sdk/models/operations/createjwtsignerplugin.go
  - internal/sdk/models/operations/createkafkalogplugin.go
  - internal/sdk/models/operations/createkafkaupstreamplugin.go
  - internal/sdk/models/operations/createkey.go
  - internal/sdk/models/operations/createkeyauth.go
  - internal/sdk/models/operations/createkeyauthencplugin.go
  - internal/sdk/models/operations/createkeyauthplugin.go
  - internal/sdk/models/operations/createkeyset.go
  - internal/sdk/models/operations/createkonnectapplicationauthplugin.go
  - internal/sdk/models/operations/createldapauthadvancedplugin.go
  - internal/sdk/models/operations/createldapauthplugin.go
  - internal/sdk/models/operations/createlogglyplugin.go
  - internal/sdk/models/operations/createmockingplugin.go
  - internal/sdk/models/operations/createmtlsauth.go
  - internal/sdk/models/operations/createmtlsauthplugin.go
  - internal/sdk/models/operations/createoasvalidationplugin.go
  - internal/sdk/models/operations/createoauth2introspectionplugin.go
  - internal/sdk/models/operations/createoauth2plugin.go
  - internal/sdk/models/operations/createopaplugin.go
  - internal/sdk/models/operations/createopenidconnectplugin.go
  - internal/sdk/models/operations/createopentelemetryplugin.go
  - internal/sdk/models/operations/createplugin.go
  - internal/sdk/models/operations/createpostfunctionplugin.go
  - internal/sdk/models/operations/createprefunctionplugin.go
  - internal/sdk/models/operations/createprometheusplugin.go
  - internal/sdk/models/operations/createproxycacheadvancedplugin.go
  - internal/sdk/models/operations/createproxycacheplugin.go
  - internal/sdk/models/operations/createratelimitingadvancedplugin.go
  - internal/sdk/models/operations/createratelimitingplugin.go
  - internal/sdk/models/operations/createrequestsizelimitingplugin.go
  - internal/sdk/models/operations/createrequestterminationplugin.go
  - internal/sdk/models/operations/createrequesttransformeradvancedplugin.go
  - internal/sdk/models/operations/createrequesttransformerplugin.go
  - internal/sdk/models/operations/createrequestvalidatorplugin.go
  - internal/sdk/models/operations/createresponseratelimitingplugin.go
  - internal/sdk/models/operations/createresponsetransformeradvancedplugin.go
  - internal/sdk/models/operations/createresponsetransformerplugin.go
  - internal/sdk/models/operations/createroute.go
  - internal/sdk/models/operations/createroutebyheaderplugin.go
  - internal/sdk/models/operations/createroutetransformeradvancedplugin.go
  - internal/sdk/models/operations/createsamlplugin.go
  - internal/sdk/models/operations/createservice.go
  - internal/sdk/models/operations/createsessionplugin.go
  - internal/sdk/models/operations/createsni.go
  - internal/sdk/models/operations/createstatsdadvancedplugin.go
  - internal/sdk/models/operations/createstatsdplugin.go
  - internal/sdk/models/operations/createsyslogplugin.go
  - internal/sdk/models/operations/createtcplogplugin.go
  - internal/sdk/models/operations/createtlshandshakemodifierplugin.go
  - internal/sdk/models/operations/createtlsmetadataheadersplugin.go
  - internal/sdk/models/operations/createudplogplugin.go
  - internal/sdk/models/operations/createupstream.go
  - internal/sdk/models/operations/createupstreamtimeoutplugin.go
  - internal/sdk/models/operations/createvault.go
  - internal/sdk/models/operations/createvaultauthplugin.go
  - internal/sdk/models/operations/createwebsocketsizelimitplugin.go
  - internal/sdk/models/operations/createwebsocketvalidatorplugin.go
  - internal/sdk/models/operations/createxmlthreatprotectionplugin.go
  - internal/sdk/models/operations/createzipkinplugin.go
  - internal/sdk/models/operations/deleteacl.go
  - internal/sdk/models/operations/deleteaclplugin.go
  - internal/sdk/models/operations/deleteacmeplugin.go
  - internal/sdk/models/operations/deleteaipromptdecoratorplugin.go
  - internal/sdk/models/operations/deleteaipromptguardplugin.go
  - internal/sdk/models/operations/deleteaiprompttemplateplugin.go
  - internal/sdk/models/operations/deleteaiproxyplugin.go
  - internal/sdk/models/operations/deleteairequesttransformerplugin.go
  - internal/sdk/models/operations/deleteairesponsetransformerplugin.go
  - internal/sdk/models/operations/deleteawslambdaplugin.go
  - internal/sdk/models/operations/deleteazurefunctionsplugin.go
  - internal/sdk/models/operations/deletebasicauth.go
  - internal/sdk/models/operations/deletebasicauthplugin.go
  - internal/sdk/models/operations/deletebotdetectionplugin.go
  - internal/sdk/models/operations/deletecacertificate.go
  - internal/sdk/models/operations/deletecanaryplugin.go
  - internal/sdk/models/operations/deletecertificate.go
  - internal/sdk/models/operations/deleteconsumer.go
  - internal/sdk/models/operations/deleteconsumergroup.go
  - internal/sdk/models/operations/deletecorrelationidplugin.go
  - internal/sdk/models/operations/deletecorsplugin.go
  - internal/sdk/models/operations/deletedatadogplugin.go
  - internal/sdk/models/operations/deletedegraphqlplugin.go
  - internal/sdk/models/operations/deleteexittransformerplugin.go
  - internal/sdk/models/operations/deletefilelogplugin.go
  - internal/sdk/models/operations/deleteforwardproxyplugin.go
  - internal/sdk/models/operations/deletegraphqlproxycacheadvancedplugin.go
  - internal/sdk/models/operations/deletegraphqlratelimitingadvancedplugin.go
  - internal/sdk/models/operations/deletegrpcgatewayplugin.go
  - internal/sdk/models/operations/deletegrpcwebplugin.go
  - internal/sdk/models/operations/deletehmacauth.go
  - internal/sdk/models/operations/deletehmacauthplugin.go
  - internal/sdk/models/operations/deletehttplogplugin.go
  - internal/sdk/models/operations/deleteiprestrictionplugin.go
  - internal/sdk/models/operations/deletejqplugin.go
  - internal/sdk/models/operations/deletejwedecryptplugin.go
  - internal/sdk/models/operations/deletejwt.go
  - internal/sdk/models/operations/deletejwtplugin.go
  - internal/sdk/models/operations/deletejwtsignerplugin.go
  - internal/sdk/models/operations/deletekafkalogplugin.go
  - internal/sdk/models/operations/deletekafkaupstreamplugin.go
  - internal/sdk/models/operations/deletekey.go
  - internal/sdk/models/operations/deletekeyauth.go
  - internal/sdk/models/operations/deletekeyauthencplugin.go
  - internal/sdk/models/operations/deletekeyauthplugin.go
  - internal/sdk/models/operations/deletekeyset.go
  - internal/sdk/models/operations/deletekonnectapplicationauthplugin.go
  - internal/sdk/models/operations/deleteldapauthadvancedplugin.go
  - internal/sdk/models/operations/deleteldapauthplugin.go
  - internal/sdk/models/operations/deletelogglyplugin.go
  - internal/sdk/models/operations/deletemockingplugin.go
  - internal/sdk/models/operations/deletemtlsauth.go
  - internal/sdk/models/operations/deletemtlsauthplugin.go
  - internal/sdk/models/operations/deleteoasvalidationplugin.go
  - internal/sdk/models/operations/deleteoauth2introspectionplugin.go
  - internal/sdk/models/operations/deleteoauth2plugin.go
  - internal/sdk/models/operations/deleteopaplugin.go
  - internal/sdk/models/operations/deleteopenidconnectplugin.go
  - internal/sdk/models/operations/deleteopentelemetryplugin.go
  - internal/sdk/models/operations/deleteplugin.go
  - internal/sdk/models/operations/deletepostfunctionplugin.go
  - internal/sdk/models/operations/deleteprefunctionplugin.go
  - internal/sdk/models/operations/deleteprometheusplugin.go
  - internal/sdk/models/operations/deleteproxycacheadvancedplugin.go
  - internal/sdk/models/operations/deleteproxycacheplugin.go
  - internal/sdk/models/operations/deleteratelimitingadvancedplugin.go
  - internal/sdk/models/operations/deleteratelimitingplugin.go
  - internal/sdk/models/operations/deleterequestsizelimitingplugin.go
  - internal/sdk/models/operations/deleterequestterminationplugin.go
  - internal/sdk/models/operations/deleterequesttransformeradvancedplugin.go
  - internal/sdk/models/operations/deleterequesttransformerplugin.go
  - internal/sdk/models/operations/deleterequestvalidatorplugin.go
  - internal/sdk/models/operations/deleteresponseratelimitingplugin.go
  - internal/sdk/models/operations/deleteresponsetransformeradvancedplugin.go
  - internal/sdk/models/operations/deleteresponsetransformerplugin.go
  - internal/sdk/models/operations/deleteroute.go
  - internal/sdk/models/operations/deleteroutebyheaderplugin.go
  - internal/sdk/models/operations/deleteroutetransformeradvancedplugin.go
  - internal/sdk/models/operations/deletesamlplugin.go
  - internal/sdk/models/operations/deleteservice.go
  - internal/sdk/models/operations/deletesessionplugin.go
  - internal/sdk/models/operations/deletesni.go
  - internal/sdk/models/operations/deletestatsdadvancedplugin.go
  - internal/sdk/models/operations/deletestatsdplugin.go
  - internal/sdk/models/operations/deletesyslogplugin.go
  - internal/sdk/models/operations/deletetcplogplugin.go
  - internal/sdk/models/operations/deletetlshandshakemodifierplugin.go
  - internal/sdk/models/operations/deletetlsmetadataheadersplugin.go
  - internal/sdk/models/operations/deleteudplogplugin.go
  - internal/sdk/models/operations/deleteupstream.go
  - internal/sdk/models/operations/deleteupstreamtimeoutplugin.go
  - internal/sdk/models/operations/deletevault.go
  - internal/sdk/models/operations/deletevaultauthplugin.go
  - internal/sdk/models/operations/deletewebsocketsizelimitplugin.go
  - internal/sdk/models/operations/deletewebsocketvalidatorplugin.go
  - internal/sdk/models/operations/deletexmlthreatprotectionplugin.go
  - internal/sdk/models/operations/deletezipkinplugin.go
  - internal/sdk/models/operations/fetchpluginschema.go
  - internal/sdk/models/operations/getacl.go
  - internal/sdk/models/operations/getaclplugin.go
  - internal/sdk/models/operations/getacmeplugin.go
  - internal/sdk/models/operations/getaipromptdecoratorplugin.go
  - internal/sdk/models/operations/getaipromptguardplugin.go
  - internal/sdk/models/operations/getaiprompttemplateplugin.go
  - internal/sdk/models/operations/getaiproxyplugin.go
  - internal/sdk/models/operations/getairequesttransformerplugin.go
  - internal/sdk/models/operations/getairesponsetransformerplugin.go
  - internal/sdk/models/operations/getawslambdaplugin.go
  - internal/sdk/models/operations/getazurefunctionsplugin.go
  - internal/sdk/models/operations/getbasicauth.go
  - internal/sdk/models/operations/getbasicauthplugin.go
  - internal/sdk/models/operations/getbotdetectionplugin.go
  - internal/sdk/models/operations/getcacertificate.go
  - internal/sdk/models/operations/getcanaryplugin.go
  - internal/sdk/models/operations/getcertificate.go
  - internal/sdk/models/operations/getconsumer.go
  - internal/sdk/models/operations/getconsumergroup.go
  - internal/sdk/models/operations/getcorrelationidplugin.go
  - internal/sdk/models/operations/getcorsplugin.go
  - internal/sdk/models/operations/getdatadogplugin.go
  - internal/sdk/models/operations/getdegraphqlplugin.go
  - internal/sdk/models/operations/getexittransformerplugin.go
  - internal/sdk/models/operations/getfilelogplugin.go
  - internal/sdk/models/operations/getforwardproxyplugin.go
  - internal/sdk/models/operations/getgraphqlproxycacheadvancedplugin.go
  - internal/sdk/models/operations/getgraphqlratelimitingadvancedplugin.go
  - internal/sdk/models/operations/getgrpcgatewayplugin.go
  - internal/sdk/models/operations/getgrpcwebplugin.go
  - internal/sdk/models/operations/gethmacauth.go
  - internal/sdk/models/operations/gethmacauthplugin.go
  - internal/sdk/models/operations/gethttplogplugin.go
  - internal/sdk/models/operations/getiprestrictionplugin.go
  - internal/sdk/models/operations/getjqplugin.go
  - internal/sdk/models/operations/getjwedecryptplugin.go
  - internal/sdk/models/operations/getjwt.go
  - internal/sdk/models/operations/getjwtplugin.go
  - internal/sdk/models/operations/getjwtsignerplugin.go
  - internal/sdk/models/operations/getkafkalogplugin.go
  - internal/sdk/models/operations/getkafkaupstreamplugin.go
  - internal/sdk/models/operations/getkey.go
  - internal/sdk/models/operations/getkeyauth.go
  - internal/sdk/models/operations/getkeyauthencplugin.go
  - internal/sdk/models/operations/getkeyauthplugin.go
  - internal/sdk/models/operations/getkeyset.go
  - internal/sdk/models/operations/getkonnectapplicationauthplugin.go
  - internal/sdk/models/operations/getldapauthadvancedplugin.go
  - internal/sdk/models/operations/getldapauthplugin.go
  - internal/sdk/models/operations/getlogglyplugin.go
  - internal/sdk/models/operations/getmockingplugin.go
  - internal/sdk/models/operations/getmtlsauth.go
  - internal/sdk/models/operations/getmtlsauthplugin.go
  - internal/sdk/models/operations/getoasvalidationplugin.go
  - internal/sdk/models/operations/getoauth2introspectionplugin.go
  - internal/sdk/models/operations/getoauth2plugin.go
  - internal/sdk/models/operations/getopaplugin.go
  - internal/sdk/models/operations/getopenidconnectplugin.go
  - internal/sdk/models/operations/getopentelemetryplugin.go
  - internal/sdk/models/operations/getplugin.go
  - internal/sdk/models/operations/getpostfunctionplugin.go
  - internal/sdk/models/operations/getprefunctionplugin.go
  - internal/sdk/models/operations/getprometheusplugin.go
  - internal/sdk/models/operations/getproxycacheadvancedplugin.go
  - internal/sdk/models/operations/getproxycacheplugin.go
  - internal/sdk/models/operations/getratelimitingadvancedplugin.go
  - internal/sdk/models/operations/getratelimitingplugin.go
  - internal/sdk/models/operations/getrequestsizelimitingplugin.go
  - internal/sdk/models/operations/getrequestterminationplugin.go
  - internal/sdk/models/operations/getrequesttransformeradvancedplugin.go
  - internal/sdk/models/operations/getrequesttransformerplugin.go
  - internal/sdk/models/operations/getrequestvalidatorplugin.go
  - internal/sdk/models/operations/getresponseratelimitingplugin.go
  - internal/sdk/models/operations/getresponsetransformeradvancedplugin.go
  - internal/sdk/models/operations/getresponsetransformerplugin.go
  - internal/sdk/models/operations/getroute.go
  - internal/sdk/models/operations/getroutebyheaderplugin.go
  - internal/sdk/models/operations/getroutetransformeradvancedplugin.go
  - internal/sdk/models/operations/getsamlplugin.go
  - internal/sdk/models/operations/getservice.go
  - internal/sdk/models/operations/getsessionplugin.go
  - internal/sdk/models/operations/getsni.go
  - internal/sdk/models/operations/getstatsdadvancedplugin.go
  - internal/sdk/models/operations/getstatsdplugin.go
  - internal/sdk/models/operations/getsyslogplugin.go
  - internal/sdk/models/operations/gettcplogplugin.go
  - internal/sdk/models/operations/gettlshandshakemodifierplugin.go
  - internal/sdk/models/operations/gettlsmetadataheadersplugin.go
  - internal/sdk/models/operations/getudplogplugin.go
  - internal/sdk/models/operations/getupstream.go
  - internal/sdk/models/operations/getupstreamtimeoutplugin.go
  - internal/sdk/models/operations/getvault.go
  - internal/sdk/models/operations/getvaultauthplugin.go
  - internal/sdk/models/operations/getwebsocketsizelimitplugin.go
  - internal/sdk/models/operations/getwebsocketvalidatorplugin.go
  - internal/sdk/models/operations/getxmlthreatprotectionplugin.go
  - internal/sdk/models/operations/getzipkinplugin.go
  - internal/sdk/models/operations/listacl.go
  - internal/sdk/models/operations/listbasicauth.go
  - internal/sdk/models/operations/listcacertificate.go
  - internal/sdk/models/operations/listcertificate.go
  - internal/sdk/models/operations/listconsumer.go
  - internal/sdk/models/operations/listconsumergroup.go
  - internal/sdk/models/operations/listconsumergroupsforconsumer.go
  - internal/sdk/models/operations/listconsumersforconsumergroup.go
  - internal/sdk/models/operations/listgrouproles.go
  - internal/sdk/models/operations/listgroups.go
  - internal/sdk/models/operations/listhmacauth.go
  - internal/sdk/models/operations/listjwt.go
  - internal/sdk/models/operations/listkey.go
  - internal/sdk/models/operations/listkeyauth.go
  - internal/sdk/models/operations/listkeyset.go
  - internal/sdk/models/operations/listmtlsauth.go
  - internal/sdk/models/operations/listplugin.go
  - internal/sdk/models/operations/listroute.go
  - internal/sdk/models/operations/listservice.go
  - internal/sdk/models/operations/listsni.go
  - internal/sdk/models/operations/listupstream.go
  - internal/sdk/models/operations/listvault.go
  - internal/sdk/models/operations/options.go
  - internal/sdk/models/operations/postkeyringremove.go
  - internal/sdk/models/operations/removeallconsumersfromconsumergroup.go
  - internal/sdk/models/operations/removeconsumerfromallconsumergroups.go
  - internal/sdk/models/operations/removeconsumerfromconsumergroup.go
  - internal/sdk/models/operations/removeconsumerfromgroup.go
  - internal/sdk/models/operations/removerolefromgroup.go
  - internal/sdk/models/operations/updateacl.go
  - internal/sdk/models/operations/updateaclplugin.go
  - internal/sdk/models/operations/updateacmeplugin.go
  - internal/sdk/models/operations/updateaipromptdecoratorplugin.go
  - internal/sdk/models/operations/updateaipromptguardplugin.go
  - internal/sdk/models/operations/updateaiprompttemplateplugin.go
  - internal/sdk/models/operations/updateaiproxyplugin.go
  - internal/sdk/models/operations/updateairequesttransformerplugin.go
  - internal/sdk/models/operations/updateairesponsetransformerplugin.go
  - internal/sdk/models/operations/updateawslambdaplugin.go
  - internal/sdk/models/operations/updateazurefunctionsplugin.go
  - internal/sdk/models/operations/updatebasicauth.go
  - internal/sdk/models/operations/updatebasicauthplugin.go
  - internal/sdk/models/operations/updatebotdetectionplugin.go
  - internal/sdk/models/operations/updatecacertificate.go
  - internal/sdk/models/operations/updatecanaryplugin.go
  - internal/sdk/models/operations/updatecertificate.go
  - internal/sdk/models/operations/updateconsumer.go
  - internal/sdk/models/operations/updateconsumergroup.go
  - internal/sdk/models/operations/updatecorrelationidplugin.go
  - internal/sdk/models/operations/updatecorsplugin.go
  - internal/sdk/models/operations/updatedatadogplugin.go
  - internal/sdk/models/operations/updatedegraphqlplugin.go
  - internal/sdk/models/operations/updateexittransformerplugin.go
  - internal/sdk/models/operations/updatefilelogplugin.go
  - internal/sdk/models/operations/updateforwardproxyplugin.go
  - internal/sdk/models/operations/updategraphqlproxycacheadvancedplugin.go
  - internal/sdk/models/operations/updategraphqlratelimitingadvancedplugin.go
  - internal/sdk/models/operations/updategroup.go
  - internal/sdk/models/operations/updategrpcgatewayplugin.go
  - internal/sdk/models/operations/updategrpcwebplugin.go
  - internal/sdk/models/operations/updatehmacauth.go
  - internal/sdk/models/operations/updatehmacauthplugin.go
  - internal/sdk/models/operations/updatehttplogplugin.go
  - internal/sdk/models/operations/updateiprestrictionplugin.go
  - internal/sdk/models/operations/updatejqplugin.go
  - internal/sdk/models/operations/updatejwedecryptplugin.go
  - internal/sdk/models/operations/updatejwt.go
  - internal/sdk/models/operations/updatejwtplugin.go
  - internal/sdk/models/operations/updatejwtsignerplugin.go
  - internal/sdk/models/operations/updatekafkalogplugin.go
  - internal/sdk/models/operations/updatekafkaupstreamplugin.go
  - internal/sdk/models/operations/updatekey.go
  - internal/sdk/models/operations/updatekeyauth.go
  - internal/sdk/models/operations/updatekeyauthencplugin.go
  - internal/sdk/models/operations/updatekeyauthplugin.go
  - internal/sdk/models/operations/updatekeyset.go
  - internal/sdk/models/operations/updatekonnectapplicationauthplugin.go
  - internal/sdk/models/operations/updateldapauthadvancedplugin.go
  - internal/sdk/models/operations/updateldapauthplugin.go
  - internal/sdk/models/operations/updatelogglyplugin.go
  - internal/sdk/models/operations/updatemockingplugin.go
  - internal/sdk/models/operations/updatemtlsauth.go
  - internal/sdk/models/operations/updatemtlsauthplugin.go
  - internal/sdk/models/operations/updateoasvalidationplugin.go
  - internal/sdk/models/operations/updateoauth2introspectionplugin.go
  - internal/sdk/models/operations/updateoauth2plugin.go
  - internal/sdk/models/operations/updateopaplugin.go
  - internal/sdk/models/operations/updateopenidconnectplugin.go
  - internal/sdk/models/operations/updateopentelemetryplugin.go
  - internal/sdk/models/operations/updateplugin.go
  - internal/sdk/models/operations/updatepostfunctionplugin.go
  - internal/sdk/models/operations/updateprefunctionplugin.go
  - internal/sdk/models/operations/updateprometheusplugin.go
  - internal/sdk/models/operations/updateproxycacheadvancedplugin.go
  - internal/sdk/models/operations/updateproxycacheplugin.go
  - internal/sdk/models/operations/updateratelimitingadvancedplugin.go
  - internal/sdk/models/operations/updateratelimitingplugin.go
  - internal/sdk/models/operations/updaterequestsizelimitingplugin.go
  - internal/sdk/models/operations/updaterequestterminationplugin.go
  - internal/sdk/models/operations/updaterequesttransformeradvancedplugin.go
  - internal/sdk/models/operations/updaterequesttransformerplugin.go
  - internal/sdk/models/operations/updaterequestvalidatorplugin.go
  - internal/sdk/models/operations/updateresponseratelimitingplugin.go
  - internal/sdk/models/operations/updateresponsetransformeradvancedplugin.go
  - internal/sdk/models/operations/updateresponsetransformerplugin.go
  - internal/sdk/models/operations/updateroute.go
  - internal/sdk/models/operations/updateroutebyheaderplugin.go
  - internal/sdk/models/operations/updateroutetransformeradvancedplugin.go
  - internal/sdk/models/operations/updatesamlplugin.go
  - internal/sdk/models/operations/updateservice.go
  - internal/sdk/models/operations/updatesessionplugin.go
  - internal/sdk/models/operations/updatesni.go
  - internal/sdk/models/operations/updatestatsdadvancedplugin.go
  - internal/sdk/models/operations/updatestatsdplugin.go
  - internal/sdk/models/operations/updatesyslogplugin.go
  - internal/sdk/models/operations/updatetcplogplugin.go
  - internal/sdk/models/operations/updatetlshandshakemodifierplugin.go
  - internal/sdk/models/operations/updatetlsmetadataheadersplugin.go
  - internal/sdk/models/operations/updateudplogplugin.go
  - internal/sdk/models/operations/updateupstream.go
  - internal/sdk/models/operations/updateupstreamtimeoutplugin.go
  - internal/sdk/models/operations/updatevault.go
  - internal/sdk/models/operations/updatevaultauthplugin.go
  - internal/sdk/models/operations/updatewebsocketsizelimitplugin.go
  - internal/sdk/models/operations/updatewebsocketvalidatorplugin.go
  - internal/sdk/models/operations/updatexmlthreatprotectionplugin.go
  - internal/sdk/models/operations/updatezipkinplugin.go
  - internal/sdk/models/operations/upsertacl.go
  - internal/sdk/models/operations/upsertbasicauth.go
  - internal/sdk/models/operations/upsertcacertificate.go
  - internal/sdk/models/operations/upsertcertificate.go
  - internal/sdk/models/operations/upsertconsumer.go
  - internal/sdk/models/operations/upsertconsumergroup.go
  - internal/sdk/models/operations/upserthmacauth.go
  - internal/sdk/models/operations/upsertjwt.go
  - internal/sdk/models/operations/upsertkey.go
  - internal/sdk/models/operations/upsertkeyauth.go
  - internal/sdk/models/operations/upsertkeyset.go
  - internal/sdk/models/operations/upsertmtlsauth.go
  - internal/sdk/models/operations/upsertplugin.go
  - internal/sdk/models/operations/upsertroute.go
  - internal/sdk/models/operations/upsertservice.go
  - internal/sdk/models/operations/upsertsni.go
  - internal/sdk/models/operations/upsertupstream.go
  - internal/sdk/models/operations/upsertvault.go
  - internal/sdk/models/shared/acl.go
  - internal/sdk/models/shared/aclplugin.go
  - internal/sdk/models/shared/acmeplugin.go
  - internal/sdk/models/shared/aipromptdecoratorplugin.go
  - internal/sdk/models/shared/aipromptguardplugin.go
  - internal/sdk/models/shared/aiprompttemplateplugin.go
  - internal/sdk/models/shared/aiproxyplugin.go
  - internal/sdk/models/shared/airequesttransformerplugin.go
  - internal/sdk/models/shared/airesponsetransformerplugin.go
  - internal/sdk/models/shared/awslambdaplugin.go
  - internal/sdk/models/shared/azurefunctionsplugin.go
  - internal/sdk/models/shared/basicauth.go
  - internal/sdk/models/shared/basicauthplugin.go
  - internal/sdk/models/shared/botdetectionplugin.go
  - internal/sdk/models/shared/cacertificate.go
  - internal/sdk/models/shared/cacertificateinput.go
  - internal/sdk/models/shared/canaryplugin.go
  - internal/sdk/models/shared/certificate.go
  - internal/sdk/models/shared/certificateinput.go
  - internal/sdk/models/shared/consumer.go
  - internal/sdk/models/shared/consumergroup.go
  - internal/sdk/models/shared/consumergroupinput.go
  - internal/sdk/models/shared/consumergroupinsidewrapper.go
  - internal/sdk/models/shared/consumerinput.go
  - internal/sdk/models/shared/correlationidplugin.go
  - internal/sdk/models/shared/corsplugin.go
  - internal/sdk/models/shared/datadogplugin.go
  - internal/sdk/models/shared/degraphqlplugin.go
  - internal/sdk/models/shared/exittransformerplugin.go
  - internal/sdk/models/shared/filelogplugin.go
  - internal/sdk/models/shared/forwardproxyplugin.go
  - internal/sdk/models/shared/gatewayunauthorizederror.go
  - internal/sdk/models/shared/graphqlproxycacheadvancedplugin.go
  - internal/sdk/models/shared/graphqlratelimitingadvancedplugin.go
  - internal/sdk/models/shared/grpcgatewayplugin.go
  - internal/sdk/models/shared/grpcwebplugin.go
  - internal/sdk/models/shared/hmacauth.go
  - internal/sdk/models/shared/hmacauthplugin.go
  - internal/sdk/models/shared/httplogplugin.go
  - internal/sdk/models/shared/iprestrictionplugin.go
  - internal/sdk/models/shared/jqplugin.go
  - internal/sdk/models/shared/jwedecryptplugin.go
  - internal/sdk/models/shared/jwt.go
  - internal/sdk/models/shared/jwtplugin.go
  - internal/sdk/models/shared/jwtsignerplugin.go
  - internal/sdk/models/shared/kafkalogplugin.go
  - internal/sdk/models/shared/kafkaupstreamplugin.go
  - internal/sdk/models/shared/key.go
  - internal/sdk/models/shared/keyauth.go
  - internal/sdk/models/shared/keyauthencplugin.go
  - internal/sdk/models/shared/keyauthplugin.go
  - internal/sdk/models/shared/keyset.go
  - internal/sdk/models/shared/keysetinput.go
  - internal/sdk/models/shared/konnectapplicationauthplugin.go
  - internal/sdk/models/shared/ldapauthadvancedplugin.go
  - internal/sdk/models/shared/ldapauthplugin.go
  - internal/sdk/models/shared/logglyplugin.go
  - internal/sdk/models/shared/mockingplugin.go
  - internal/sdk/models/shared/mtlsauth.go
  - internal/sdk/models/shared/mtlsauthplugin.go
  - internal/sdk/models/shared/oasvalidationplugin.go
  - internal/sdk/models/shared/oauth2introspectionplugin.go
  - internal/sdk/models/shared/oauth2plugin.go
  - internal/sdk/models/shared/opaplugin.go
  - internal/sdk/models/shared/openidconnectplugin.go
  - internal/sdk/models/shared/opentelemetryplugin.go
  - internal/sdk/models/shared/plugin.go
  - internal/sdk/models/shared/postfunctionplugin.go
  - internal/sdk/models/shared/prefunctionplugin.go
  - internal/sdk/models/shared/prometheusplugin.go
  - internal/sdk/models/shared/proxycacheadvancedplugin.go
  - internal/sdk/models/shared/proxycacheplugin.go
  - internal/sdk/models/shared/ratelimitingadvancedplugin.go
  - internal/sdk/models/shared/ratelimitingplugin.go
  - internal/sdk/models/shared/requestsizelimitingplugin.go
  - internal/sdk/models/shared/requestterminationplugin.go
  - internal/sdk/models/shared/requesttransformeradvancedplugin.go
  - internal/sdk/models/shared/requesttransformerplugin.go
  - internal/sdk/models/shared/requestvalidatorplugin.go
  - internal/sdk/models/shared/responseratelimitingplugin.go
  - internal/sdk/models/shared/responsetransformeradvancedplugin.go
  - internal/sdk/models/shared/responsetransformerplugin.go
  - internal/sdk/models/shared/route.go
  - internal/sdk/models/shared/routebyheaderplugin.go
  - internal/sdk/models/shared/routetransformeradvancedplugin.go
  - internal/sdk/models/shared/samlplugin.go
  - internal/sdk/models/shared/security.go
  - internal/sdk/models/shared/service.go
  - internal/sdk/models/shared/sessionplugin.go
  - internal/sdk/models/shared/sni.go
  - internal/sdk/models/shared/statsdadvancedplugin.go
  - internal/sdk/models/shared/statsdplugin.go
  - internal/sdk/models/shared/syslogplugin.go
  - internal/sdk/models/shared/tcplogplugin.go
  - internal/sdk/models/shared/tlshandshakemodifierplugin.go
  - internal/sdk/models/shared/tlsmetadataheadersplugin.go
  - internal/sdk/models/shared/udplogplugin.go
  - internal/sdk/models/shared/upstream.go
  - internal/sdk/models/shared/upstreamtimeoutplugin.go
  - internal/sdk/models/shared/vault.go
  - internal/sdk/models/shared/vaultauthplugin.go
  - internal/sdk/models/shared/vaultinput.go
  - internal/sdk/models/shared/websocketsizelimitplugin.go
  - internal/sdk/models/shared/websocketvalidatorplugin.go
  - internal/sdk/models/shared/xmlthreatprotectionplugin.go
  - internal/sdk/models/shared/zipkinplugin.go
  - internal/sdk/mtlsauthcredentials.go
  - internal/sdk/plugins.go
  - internal/sdk/retry/config.go
  - internal/sdk/routes.go
  - internal/sdk/services.go
  - internal/sdk/snis.go
  - internal/sdk/types/bigint.go
  - internal/sdk/types/date.go
  - internal/sdk/types/datetime.go
  - internal/sdk/types/decimal.go
  - internal/sdk/types/pointers.go
  - internal/sdk/upstreams.go
  - internal/sdk/vaults.go
  - internal/sdk/workspaces.go
  - internal/validators/DateValidator.go
  - internal/validators/ExactlyOneChild.go
  - internal/validators/JSONParseValidator.go
  - internal/validators/RFC3339Validator.go
  - internal/validators/boolvalidators/not_null.go
  - internal/validators/float64validators/not_null.go
  - internal/validators/int64validators/not_null.go
  - internal/validators/listvalidators/not_null.go
  - internal/validators/mapvalidators/not_null.go
  - internal/validators/numbervalidators/not_null.go
  - internal/validators/objectvalidators/not_null.go
  - internal/validators/setvalidators/not_null.go
  - internal/validators/stringvalidators/not_null.go
  - main.go
  - terraform-registry-manifest.json
  - tools/tools.go
examples:
  list-acl:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 186994}
        "200":
          application/json: {"data": [{"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-acl:
    DuplicateApiKey:
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-acl:
    "":
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 671889}
    DuplicateApiKey:
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-acl:
    "":
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 812094}
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
    DuplicateApiKey:
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-acl:
    "":
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 390347}
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
    DuplicateApiKey:
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-acl:
    "":
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 71918}
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
    DuplicateApiKey:
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-basic-auth:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 601420}
        "200":
          application/json: {"data": [{"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-basic-auth:
    DuplicateApiKey:
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-basic-auth:
    "":
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 512005}
    DuplicateApiKey:
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-basic-auth:
    "":
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 109949}
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
    DuplicateApiKey:
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-basic-auth:
    "":
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 197723}
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
    DuplicateApiKey:
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-basic-auth:
    "":
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 234929}
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
    DuplicateApiKey:
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-ca_certificate:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 41102}
        "200":
          application/json: {"data": [{"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-ca_certificate:
    DuplicateApiKey:
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-ca_certificate:
    "":
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 495870}
    DuplicateApiKey:
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-ca_certificate:
    "":
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 834989}
        "200":
          application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
    DuplicateApiKey:
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-ca_certificate:
    "":
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 462228}
        "200":
          application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
    DuplicateApiKey:
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-ca_certificate:
    "":
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 10999}
        "200":
          application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
    DuplicateApiKey:
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-certificate:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 637614}
        "200":
          application/json: {"data": [{"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-certificate:
    DuplicateApiKey:
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-certificate:
    "":
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 841254}
    DuplicateApiKey:
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-certificate:
    "":
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 173775}
        "200":
          application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
    DuplicateApiKey:
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-certificate:
    "":
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 900174}
        "200":
          application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
    DuplicateApiKey:
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-certificate:
    "":
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 45220}
        "200":
          application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
    DuplicateApiKey:
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-consumer_group:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 463382}
        "200": {}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-consumer_group:
    DuplicateApiKey:
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-consumer_group:
    "":
      parameters:
        path:
          ConsumerGroupId: ""
      responses:
        "401":
          application/json: {"message": "<value>", "status": 256735}
    DuplicateApiKey:
      parameters:
        path:
          ConsumerGroupId: ""
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ConsumerGroupId: ""
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ConsumerGroupId: ""
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-consumer_group:
    "":
      parameters:
        path:
          ConsumerGroupId: ""
      responses:
        "401":
          application/json: {"message": "<value>", "status": 945866}
        "200": {}
    DuplicateApiKey:
      parameters:
        path:
          ConsumerGroupId: ""
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ConsumerGroupId: ""
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ConsumerGroupId: ""
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-consumer_group:
    "":
      parameters:
        path:
          ConsumerGroupId: ""
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 203183}
        "200":
          application/json: {"name": "<value>"}
    DuplicateApiKey:
      parameters:
        path:
          ConsumerGroupId: ""
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ConsumerGroupId: ""
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ConsumerGroupId: ""
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-consumer_group:
    "":
      parameters:
        path:
          ConsumerGroupId: ""
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 153550}
        "200":
          application/json: {"name": "<value>"}
    DuplicateApiKey:
      parameters:
        path:
          ConsumerGroupId: ""
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ConsumerGroupId: ""
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ConsumerGroupId: ""
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  add-consumer-to-group:
    speakeasy-default-add-consumer-to-group:
      parameters:
        path:
          ConsumerGroupId: "<value>"
      requestBody:
        application/json: {"consumer": "cf4c7e60-11db-49dd-b300-7c7e5f0f7e6b"}
      responses:
        "201":
          application/json: {"consumers": [{"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}]}
  remove-consumer-from-group:
    speakeasy-default-remove-consumer-from-group:
      parameters:
        path:
          ConsumerGroupId: "<value>"
          ConsumerId: "<value>"
          ConsumerIdOrUsername: "<value>"
  list-consumer:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 184678}
        "200":
          application/json: {"data": [{"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-consumer:
    DuplicateApiKey:
      requestBody:
        application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-consumer:
    "":
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 265954}
    DuplicateApiKey:
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-consumer:
    "":
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 616749}
        "200":
          application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
    DuplicateApiKey:
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-consumer:
    "":
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      requestBody:
        application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 559117}
        "200":
          application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
    DuplicateApiKey:
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      requestBody:
        application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      requestBody:
        application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      requestBody:
        application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-consumer:
    "":
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      requestBody:
        application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 246381}
        "200":
          application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
    DuplicateApiKey:
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      requestBody:
        application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      requestBody:
        application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      requestBody:
        application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-hmac-auth:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 964312}
        "200":
          application/json: {"data": [{"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-hmac-auth:
    DuplicateApiKey:
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-hmac-auth:
    "":
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 208296}
    DuplicateApiKey:
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-hmac-auth:
    "":
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 9615}
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
    DuplicateApiKey:
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-hmac-auth:
    "":
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 184678}
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
    DuplicateApiKey:
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-hmac-auth:
    "":
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 122499}
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
    DuplicateApiKey:
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-jwt:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 276}
        "200":
          application/json: {"data": [{"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-jwt:
    DuplicateApiKey:
      requestBody:
        application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-jwt:
    "":
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 971663}
    DuplicateApiKey:
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-jwt:
    "":
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 7837}
        "200":
          application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
    DuplicateApiKey:
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-jwt:
    "":
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      requestBody:
        application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 949195}
        "200":
          application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
    DuplicateApiKey:
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      requestBody:
        application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      requestBody:
        application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      requestBody:
        application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-jwt:
    "":
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      requestBody:
        application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 173373}
        "200":
          application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
    DuplicateApiKey:
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      requestBody:
        application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      requestBody:
        application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      requestBody:
        application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-key-auth:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 225401}
        "200":
          application/json: {"data": [{"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-key-auth:
    DuplicateApiKey:
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-key-auth:
    "":
      parameters:
        path:
          KeyAuthId: ""
      responses:
        "401":
          application/json: {"message": "<value>", "status": 183463}
    DuplicateApiKey:
      parameters:
        path:
          KeyAuthId: ""
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          KeyAuthId: ""
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          KeyAuthId: ""
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-key-auth:
    "":
      parameters:
        path:
          KeyAuthId: ""
      responses:
        "401":
          application/json: {"message": "<value>", "status": 808504}
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
    DuplicateApiKey:
      parameters:
        path:
          KeyAuthId: ""
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          KeyAuthId: ""
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          KeyAuthId: ""
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-key-auth:
    "":
      parameters:
        path:
          KeyAuthId: ""
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 61551}
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
    DuplicateApiKey:
      parameters:
        path:
          KeyAuthId: ""
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          KeyAuthId: ""
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          KeyAuthId: ""
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-key-auth:
    "":
      parameters:
        path:
          KeyAuthId: ""
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 185072}
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
    DuplicateApiKey:
      parameters:
        path:
          KeyAuthId: ""
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          KeyAuthId: ""
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          KeyAuthId: ""
      requestBody:
        application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-key-set:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 539517}
        "200":
          application/json: {"data": [{"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-key-set:
    DuplicateApiKey:
      requestBody:
        application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-key-set:
    "":
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 151744}
    DuplicateApiKey:
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-key-set:
    "":
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 321714}
        "200":
          application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
    DuplicateApiKey:
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-key-set:
    "":
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      requestBody:
        application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 852801}
        "200":
          application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
    DuplicateApiKey:
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      requestBody:
        application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      requestBody:
        application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      requestBody:
        application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-key-set:
    "":
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      requestBody:
        application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 666641}
        "200":
          application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
    DuplicateApiKey:
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      requestBody:
        application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      requestBody:
        application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          KeySetIdOrName: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      requestBody:
        application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-key:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 54127}
        "200":
          application/json: {"data": [{"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-key:
    DuplicateApiKey:
      requestBody:
        application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-key:
    "":
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 201277}
    DuplicateApiKey:
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-key:
    "":
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 265510}
        "200":
          application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
    DuplicateApiKey:
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-key:
    "":
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      requestBody:
        application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 464557}
        "200":
          application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
    DuplicateApiKey:
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      requestBody:
        application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      requestBody:
        application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      requestBody:
        application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-key:
    "":
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      requestBody:
        application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 385247}
        "200":
          application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
    DuplicateApiKey:
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      requestBody:
        application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      requestBody:
        application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          KeyIdOrName: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      requestBody:
        application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-plugin:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 792384}
        "200":
          application/json: {"data": [{"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-acl-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-acme-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-aipromptdecorator-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-aipromptguard-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-aiprompttemplate-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-aiproxy-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-airequesttransformer-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-airesponsetransformer-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-awslambda-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-azurefunctions-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-basicauth-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-botdetection-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-canary-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-correlationid-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-cors-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-datadog-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-degraphql-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-exittransformer-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-filelog-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-forwardproxy-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-graphqlproxycacheadvanced-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-graphqlratelimitingadvanced-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-grpcgateway-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-grpcweb-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-hmacauth-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-httplog-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-iprestriction-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-jq-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-jwedecrypt-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-jwt-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-jwtsigner-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-kafkalog-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-kafkaupstream-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-keyauth-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-keyauthenc-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-konnectapplicationauth-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"key_names": ["apikey"]}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"key_names": ["apikey"]}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"key_names": ["apikey"]}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-ldapauth-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-ldapauthadvanced-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-loggly-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-mocking-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-mtlsauth-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-oasvalidation-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-oauth2-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-oauth2introspection-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-opa-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-openidconnect-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-opentelemetry-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-postfunction-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-prefunction-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-prometheus-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-proxycache-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-proxycacheadvanced-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-ratelimiting-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-ratelimitingadvanced-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-requestsizelimiting-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-requesttermination-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-requesttransformer-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-requesttransformeradvanced-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-requestvalidator-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-responseratelimiting-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-responsetransformer-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-responsetransformeradvanced-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-routebyheader-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-routetransformeradvanced-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-saml-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-session-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-statsd-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-statsdadvanced-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-syslog-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-tcplog-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-tlshandshakemodifier-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-tlsmetadataheaders-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-udplog-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-upstreamtimeout-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-vaultauth-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-websocketsizelimit-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-websocketvalidator-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-xmlthreatprotection-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-zipkin-plugin:
    DuplicateApiKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 447223}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 929065}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 565673}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 114024}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-acl-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 40310}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-acl-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 629505}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-acl-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 398732}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-acme-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 951103}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-acme-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 142349}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-acme-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 361475}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-aipromptdecorator-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 683438}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-aipromptdecorator-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 679068}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-aipromptdecorator-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 507885}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-aipromptguard-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 505831}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-aipromptguard-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 73764}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-aipromptguard-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 337772}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-aiprompttemplate-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 814219}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-aiprompttemplate-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 156428}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-aiprompttemplate-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 320899}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-aiproxy-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 165042}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-aiproxy-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 777322}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-aiproxy-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 244183}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-airequesttransformer-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 740915}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-airequesttransformer-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 102442}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-airequesttransformer-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 590113}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-airesponsetransformer-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 786765}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-airesponsetransformer-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 906560}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-airesponsetransformer-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 287995}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-awslambda-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 908715}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-awslambda-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 781584}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-awslambda-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 622710}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-azurefunctions-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 972974}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-azurefunctions-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 594459}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-azurefunctions-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 689832}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-basicauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 846085}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-basicauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 607247}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-basicauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 225103}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-botdetection-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 414688}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-botdetection-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 442064}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-botdetection-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 968921}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-canary-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 330620}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-canary-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 454356}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-canary-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 38571}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-correlationid-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 773481}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-correlationid-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 188898}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-correlationid-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 401203}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-cors-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 292093}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-cors-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 464115}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-cors-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 675653}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-datadog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 365643}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-datadog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 374222}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-datadog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 883338}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-degraphql-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 551095}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-degraphql-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 660394}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-degraphql-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 217127}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-exittransformer-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 89241}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-exittransformer-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 281271}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-exittransformer-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 381009}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-filelog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 89731}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-filelog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 83708}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-filelog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 550354}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-forwardproxy-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 561410}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-forwardproxy-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 751925}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-forwardproxy-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 198810}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-graphqlproxycacheadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 120344}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-graphqlproxycacheadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 335386}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-graphqlproxycacheadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 250726}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-graphqlratelimitingadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 750413}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-graphqlratelimitingadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 737153}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-graphqlratelimitingadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 861199}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-grpcgateway-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 139268}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-grpcgateway-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 40557}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-grpcgateway-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 373764}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-grpcweb-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 853624}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-grpcweb-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 539949}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-grpcweb-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 994579}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-hmacauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 66434}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-hmacauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 724026}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-hmacauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 911301}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-httplog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 546618}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-httplog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 113757}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-httplog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 547127}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-iprestriction-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 911327}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-iprestriction-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 453032}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-iprestriction-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 729081}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-jq-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 774557}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-jq-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 449086}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-jq-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 984795}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-jwedecrypt-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 631546}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-jwedecrypt-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 121273}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-jwedecrypt-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 103795}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-jwt-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 382955}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-jwt-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 813889}
        "200":
          application/json: {"config": {"anonymous": "<value>", "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-jwt-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 673839}
        "200":
          application/json: {"config": {"anonymous": "<value>", "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-jwtsigner-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 238902}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-jwtsigner-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 978819}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-jwtsigner-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 950877}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-kafkalog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 887859}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-kafkalog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 456294}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-kafkalog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 557713}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-kafkaupstream-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 479335}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-kafkaupstream-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 477436}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-kafkaupstream-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 375638}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-keyauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 174580}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-keyauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 709328}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-keyauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 277850}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-keyauthenc-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 338787}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-keyauthenc-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 195275}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-keyauthenc-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 176157}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-konnectapplicationauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 644196}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-konnectapplicationauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 869866}
        "200":
          application/json: {"config": {"key_names": ["apikey"]}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-konnectapplicationauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"key_names": ["apikey"]}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 310218}
        "200":
          application/json: {"config": {"key_names": ["apikey"]}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"key_names": ["apikey"]}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"key_names": ["apikey"]}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"key_names": ["apikey"]}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-ldapauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 545439}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-ldapauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 48974}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-ldapauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 503827}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-ldapauthadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 251916}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-ldapauthadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 502179}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-ldapauthadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 999064}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-loggly-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 151995}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-loggly-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 152935}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-loggly-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 797364}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-mocking-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 733032}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-mocking-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 533967}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-mocking-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 352959}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-mtlsauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 601812}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-mtlsauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 59405}
        "200":
          application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-mtlsauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 447054}
        "200":
          application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-oasvalidation-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 960739}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-oasvalidation-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 377120}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-oasvalidation-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 153040}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-oauth2-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 325390}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-oauth2-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 717818}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-oauth2-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 294492}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-oauth2introspection-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 384812}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-oauth2introspection-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 9170}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-oauth2introspection-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 36517}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-opa-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 391163}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-opa-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 296571}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-opa-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 864983}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-openidconnect-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 592516}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-openidconnect-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 392586}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-openidconnect-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 420425}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-opentelemetry-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 751880}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-opentelemetry-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 201934}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-opentelemetry-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 162327}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-postfunction-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 531465}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-postfunction-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 62418}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-postfunction-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 313413}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-prefunction-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 349904}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-prefunction-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 151600}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-prefunction-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 641134}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-prometheus-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 155842}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-prometheus-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 168069}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-prometheus-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 784896}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-proxycache-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 797483}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-proxycache-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 230134}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-proxycache-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 465356}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-proxycacheadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 775821}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-proxycacheadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 758275}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-proxycacheadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 629033}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-ratelimiting-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 221738}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-ratelimiting-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 517349}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-ratelimiting-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 666578}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-ratelimitingadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 524221}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-ratelimitingadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 638119}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-ratelimitingadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 168928}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-requestsizelimiting-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 434845}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-requestsizelimiting-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 748551}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-requestsizelimiting-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 751371}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-requesttermination-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 821513}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-requesttermination-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 697897}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-requesttermination-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 687217}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-requesttransformer-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 273418}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-requesttransformer-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 189647}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-requesttransformer-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 942313}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-requesttransformeradvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 117947}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-requesttransformeradvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 254381}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-requesttransformeradvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 40610}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-requestvalidator-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 245602}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-requestvalidator-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 861094}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-requestvalidator-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 518512}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-responseratelimiting-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 457051}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-responseratelimiting-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 407331}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-responseratelimiting-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 670177}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-responsetransformer-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 873676}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-responsetransformer-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 448524}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-responsetransformer-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 478345}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-responsetransformeradvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 760232}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-responsetransformeradvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 912219}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-responsetransformeradvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 334000}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-routebyheader-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 985324}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-routebyheader-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 681874}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-routebyheader-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 673939}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-routetransformeradvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 951120}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-routetransformeradvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 548866}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-routetransformeradvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 748000}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-saml-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 21866}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-saml-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 299413}
        "200":
          application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-saml-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 290222}
        "200":
          application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>"}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-session-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 914363}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-session-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 426945}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-session-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 863822}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-statsd-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 283200}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-statsd-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 582005}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-statsd-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 872907}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-statsdadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 576228}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-statsdadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 637297}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-statsdadvanced-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 225198}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-syslog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 238719}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-syslog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 301428}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-syslog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 231815}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-tcplog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 477633}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-tcplog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 69003}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-tcplog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 587993}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-tlshandshakemodifier-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 217590}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-tlshandshakemodifier-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 953528}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-tlshandshakemodifier-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 53357}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-tlsmetadataheaders-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 83546}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-tlsmetadataheaders-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 638532}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-tlsmetadataheaders-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 614012}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-udplog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 33198}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-udplog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 653554}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-udplog-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 897301}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-upstreamtimeout-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 595560}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-upstreamtimeout-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 485536}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-upstreamtimeout-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 757626}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-vaultauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 529871}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-vaultauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 195207}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-vaultauth-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 130868}
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-websocketsizelimit-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 517677}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-websocketsizelimit-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 66143}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-websocketsizelimit-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 649664}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-websocketvalidator-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 296021}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-websocketvalidator-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 674257}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-websocketvalidator-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 86199}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-xmlthreatprotection-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 28298}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-xmlthreatprotection-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 350911}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-xmlthreatprotection-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 162612}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-zipkin-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 958359}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-zipkin-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 589898}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-zipkin-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 354105}
        "200":
          application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
    DuplicateApiKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  fetch-plugin-schema:
    speakeasy-default-fetch-plugin-schema:
      parameters:
        path:
          pluginName: "<value>"
  list-route:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 175066}
        "200":
          application/json: {"data": [{"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-route:
    DuplicateApiKey:
      requestBody:
        application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-route:
    "":
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 433241}
    DuplicateApiKey:
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-route:
    "":
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 248766}
        "200":
          application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
    DuplicateApiKey:
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-route:
    "":
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      requestBody:
        application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 183981}
        "200":
          application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
    DuplicateApiKey:
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      requestBody:
        application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      requestBody:
        application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      requestBody:
        application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-route:
    "":
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      requestBody:
        application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 298474}
        "200":
          application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
    DuplicateApiKey:
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      requestBody:
        application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      requestBody:
        application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          RouteIdOrName: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      requestBody:
        application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-service:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 151286}
        "200":
          application/json: {"data": [{"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-service:
    DuplicateApiKey:
      requestBody:
        application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-service:
    "":
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 641115}
    DuplicateApiKey:
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-service:
    "":
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 795989}
        "200":
          application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
    DuplicateApiKey:
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-service:
    "":
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      requestBody:
        application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 362354}
        "200":
          application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
    DuplicateApiKey:
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      requestBody:
        application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      requestBody:
        application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      requestBody:
        application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-service:
    "":
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      requestBody:
        application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 739524}
        "200":
          application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
    DuplicateApiKey:
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      requestBody:
        application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      requestBody:
        application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          ServiceIdOrName: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      requestBody:
        application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-sni:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 974373}
        "200":
          application/json: {"data": [{"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-sni:
    DuplicateApiKey:
      requestBody:
        application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-sni:
    "":
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 761859}
    DuplicateApiKey:
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-sni:
    "":
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 786293}
        "200":
          application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
    DuplicateApiKey:
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-sni:
    "":
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      requestBody:
        application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 918838}
        "200":
          application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
    DuplicateApiKey:
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      requestBody:
        application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      requestBody:
        application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      requestBody:
        application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-sni:
    "":
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      requestBody:
        application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 145107}
        "200":
          application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
    DuplicateApiKey:
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      requestBody:
        application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      requestBody:
        application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          SNIIdOrName: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      requestBody:
        application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-upstream:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 702828}
        "200":
          application/json: {"data": [{"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-upstream:
    DuplicateApiKey:
      requestBody:
        application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-upstream:
    "":
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 424361}
    DuplicateApiKey:
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-upstream:
    "":
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 104017}
        "200":
          application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
    DuplicateApiKey:
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-upstream:
    "":
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      requestBody:
        application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 609048}
        "200":
          application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
    DuplicateApiKey:
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      requestBody:
        application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      requestBody:
        application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      requestBody:
        application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-upstream:
    "":
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      requestBody:
        application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 59493}
        "200":
          application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
    DuplicateApiKey:
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      requestBody:
        application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      requestBody:
        application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          UpstreamIdOrName: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      requestBody:
        application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-vault:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 831425}
        "200":
          application/json: {"data": [{"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}]}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-vault:
    DuplicateApiKey:
      requestBody:
        application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-vault:
    "":
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 348903}
    DuplicateApiKey:
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-vault:
    "":
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 429820}
        "200":
          application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
    DuplicateApiKey:
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-vault:
    "":
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      requestBody:
        application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 283222}
        "200":
          application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
    DuplicateApiKey:
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      requestBody:
        application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      requestBody:
        application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      requestBody:
        application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-vault:
    "":
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      requestBody:
        application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
      responses:
        "401":
          application/json: {"message": "<value>", "status": 63413}
        "200":
          application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
    DuplicateApiKey:
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      requestBody:
        application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      requestBody:
        application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          VaultIdOrPrefix: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      requestBody:
        application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-groups:
    speakeasy-default-list-groups:
      responses:
        "200":
          application/json: []
  create-group:
    speakeasy-default-create-group: {}
  update-group:
    speakeasy-default-update-group:
      parameters:
        path:
          groups: "<value>"
  remove-role-from-group:
    speakeasy-default-remove-role-from-group:
      parameters:
        path:
          groups: "<value>"
        query:
          rbac_role_id: "<value>"
          workspace_id: "<value>"
  list-group-roles:
    speakeasy-default-list-group-roles:
      parameters:
        path:
          groups: "<value>"
      responses:
        "200":
          application/json: []
  add-role-to-group:
    speakeasy-default-add-role-to-group:
      parameters:
        path:
          groups: "<value>"
  remove-all-consumers-from-consumer-group:
    speakeasy-default-remove-all-consumers-from-consumer-group:
      parameters:
        path:
          ConsumerGroupId: "<id>"
  list-consumers-for-consumer-group:
    "":
      parameters:
        path:
          ConsumerGroupId: "<id>"
        query:
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}]}
  remove-consumer-from-all-consumer-groups:
    "":
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
  list-consumer-groups-for-consumer:
    "":
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
        query:
          tags: "tag1,tag2"
  add-consumer-to-specific-consumer-group:
    "":
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      requestBody:
        application/json: {"group": "fedee695-2ae2-4e45-877a-776d9b2fc793"}
      responses:
        "201":
          application/json: {"consumer": {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}}
  remove-consumer-from-consumer-group:
    "":
      parameters:
        path:
          ConsumerIdOrUsername: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
          ConsumerGroupId: ""
  post-keyring-remove:
    DuplicateApiKey:
      requestBody:
        application/json: {"key": "3Rwvk223"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"key": "3Rwvk223"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"key": "3Rwvk223"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  list-mtls-auth:
    "":
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}]}
        "401":
          application/json: {"message": "<value>", "status": 846487}
    DuplicateApiKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        query:
          tags: "tag1,tag2"
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  create-mtls-auth:
    DuplicateApiKey:
      requestBody:
        application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      requestBody:
        application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      requestBody:
        application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  delete-mtls-auth:
    "":
      parameters:
        path:
          MTLSAuthId: ""
      responses:
        "401":
          application/json: {"message": "<value>", "status": 482868}
    DuplicateApiKey:
      parameters:
        path:
          MTLSAuthId: ""
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          MTLSAuthId: ""
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          MTLSAuthId: ""
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  get-mtls-auth:
    "":
      parameters:
        path:
          MTLSAuthId: ""
      responses:
        "200":
          application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
        "401":
          application/json: {"message": "<value>", "status": 955072}
    DuplicateApiKey:
      parameters:
        path:
          MTLSAuthId: ""
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          MTLSAuthId: ""
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          MTLSAuthId: ""
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  update-mtls-auth:
    "":
      parameters:
        path:
          MTLSAuthId: ""
      requestBody:
        application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
      responses:
        "200":
          application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
        "401":
          application/json: {"message": "<value>", "status": 580882}
    DuplicateApiKey:
      parameters:
        path:
          MTLSAuthId: ""
      requestBody:
        application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          MTLSAuthId: ""
      requestBody:
        application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          MTLSAuthId: ""
      requestBody:
        application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
  upsert-mtls-auth:
    "":
      parameters:
        path:
          MTLSAuthId: ""
      requestBody:
        application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
      responses:
        "200":
          application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
        "401":
          application/json: {"message": "<value>", "status": 667736}
    DuplicateApiKey:
      parameters:
        path:
          MTLSAuthId: ""
      requestBody:
        application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
      responses:
        "401":
          application/json: {"message": "Duplicate API key found", "status": 401}
    InvalidAuthCred:
      parameters:
        path:
          MTLSAuthId: ""
      requestBody:
        application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
      responses:
        "401":
          application/json: {"message": "Unauthorized", "status": 401}
    NoAPIKey:
      parameters:
        path:
          MTLSAuthId: ""
      requestBody:
        application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
      responses:
        "401":
          application/json: {"message": "No API key found in request", "status": 401}
generatedTests: {}
